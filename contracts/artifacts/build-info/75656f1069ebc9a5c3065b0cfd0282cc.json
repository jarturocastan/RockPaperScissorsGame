{
	"id": "75656f1069ebc9a5c3065b0cfd0282cc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"FeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n//Cryptoloteria Contracts (last updated v1.0)\r\npragma solidity ^0.8.5;\r\nimport \"./ChainLinkOracle.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n/**\r\n * @dev _Available since v1.0\r\n */\r\ncontract FeeManager is Pausable(), Ownable {\r\n    uint256 private SERVICE_FEE = 1;\r\n    uint256 private SERVICE_FEE_CANCEL = 2;\r\n    uint256 private SERVICE_FEE_ACCEPT = 2;\r\n    address payable holder;\r\n    ChainLinkOracle private oracle;\r\n\r\n    event Oracle(\r\n        address indexed oracle\r\n    );\r\n    event Holder(\r\n        address indexed holder\r\n    );\r\n\r\n    event Fee(\r\n        uint256 indexed fee,\r\n        uint256 indexed _cancelFee,\r\n        uint256 indexed _acceptFee\r\n    );\r\n\r\n    /**\r\n    * NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount\r\n    * by default is 2 USD\r\n    * Requirements:\r\n    * @param _acceptFee is the amount in USD\r\n    */\r\n    function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {\r\n        SERVICE_FEE_ACCEPT = _acceptFee;\r\n        emit Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT);\r\n        return true;\r\n    }\r\n    /**\r\n    *NOTE: _cancelFee\r\n    *\r\n    */\r\n    function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {\r\n        SERVICE_FEE_CANCEL = _cancelFee;\r\n        emit Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    *NOTE: _fee\r\n    *\r\n    */\r\n    function setFee(uint256 _fee) public onlyOwner returns(bool) {\r\n        SERVICE_FEE = _fee;\r\n        emit Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT);\r\n        return true;\r\n    }\r\n\r\n    function acceptFee() public view returns(uint256) {\r\n        return (oracle.getUSDPrice() / 100) * SERVICE_FEE_ACCEPT;\r\n    }\r\n\r\n    function cancelFee() public view returns(uint256) {\r\n        return (oracle.getUSDPrice() / 100) * SERVICE_FEE_CANCEL;\r\n    }\r\n\r\n    function fee() public view returns(uint256) {\r\n        return (oracle.getUSDPrice() / 100) * SERVICE_FEE;\r\n    }\r\n\r\n    function setHolder(address payable newHolder) public onlyOwner returns(bool) {\r\n        holder = newHolder;\r\n        emit Holder(holder);\r\n        return true;\r\n    }\r\n\r\n    function setOracle(address newOracle) public onlyOwner returns(bool) {\r\n        oracle = ChainLinkOracle(newOracle);\r\n        emit Oracle(newOracle);\r\n        return true;\r\n    }\r\n\r\n    function retriveFee() internal returns(bool) {\r\n        holder.transfer(msg.value);\r\n        return true;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ChainLinkOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.5;\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract ChainLinkOracle {\r\n    AggregatorV3Interface internal priceFeed;\r\n    address oracleAddressListen;\r\n\r\n    constructor(address _oracleAddressListen)  {\r\n        oracleAddressListen = _oracleAddressListen;\r\n        priceFeed = AggregatorV3Interface(oracleAddressListen);\r\n    }\r\n\r\n    function getLatestPrice() public view returns (int) {\r\n        (,int price,,,) = priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n\r\n    function getUSDPrice() public view returns(uint256) {\r\n        int weth_usd_price = getLatestPrice();\r\n        return uint256(((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price);\r\n    }\r\n\r\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ChainLinkOracle.sol": {
				"ChainLinkOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracleAddressListen",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUSDPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {... */\n  mstore(0x40, 0x80)\n    /* \"ChainLinkOracle.sol\":253:422  constructor(address _oracleAddressListen)  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ChainLinkOracle.sol\":307:326  oracleAddressListen */\n  0x01\n    /* \"ChainLinkOracle.sol\":307:349  oracleAddressListen = _oracleAddressListen */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ChainLinkOracle.sol\":307:326  oracleAddressListen */\n  0x00\n    /* \"ChainLinkOracle.sol\":360:414  priceFeed = AggregatorV3Interface(oracleAddressListen) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e15f473\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc338287f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":158:183   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChainLinkOracle.sol\":577:765  function getUSDPrice() public view returns(uint256) {... */\n    tag_4:\n      tag_5\n      tag_10\n      jump\t// in\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {... */\n    tag_6:\n        /* \"ChainLinkOracle.sol\":477:480  int */\n      0x00\n        /* \"ChainLinkOracle.sol\":511:520  priceFeed */\n      dup1\n      sload\n        /* \"ChainLinkOracle.sol\":511:538  priceFeed.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ChainLinkOracle.sol\":477:480  int */\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ChainLinkOracle.sol\":511:520  priceFeed */\n      and\n      swap2\n        /* \"ChainLinkOracle.sol\":511:536  priceFeed.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ChainLinkOracle.sol\":511:538  priceFeed.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ChainLinkOracle.sol\":511:520  priceFeed */\n      dup7\n        /* \"ChainLinkOracle.sol\":511:538  priceFeed.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      pop\n        /* \"ChainLinkOracle.sol\":493:538  (,int price,,,) = priceFeed.latestRoundData() */\n      swap2\n      swap6\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ChainLinkOracle.sol\":577:765  function getUSDPrice() public view returns(uint256) {... */\n    tag_10:\n        /* \"ChainLinkOracle.sol\":620:627  uint256 */\n      0x00\n        /* \"ChainLinkOracle.sol\":640:658  int weth_usd_price */\n      dup1\n        /* \"ChainLinkOracle.sol\":661:677  getLatestPrice() */\n      tag_19\n        /* \"ChainLinkOracle.sol\":661:675  getLatestPrice */\n      tag_6\n        /* \"ChainLinkOracle.sol\":661:677  getLatestPrice() */\n      jump\t// in\n    tag_19:\n        /* \"ChainLinkOracle.sol\":640:677  int weth_usd_price = getLatestPrice() */\n      swap1\n      pop\n        /* \"ChainLinkOracle.sol\":703:756  ((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price */\n      tag_20\n        /* \"ChainLinkOracle.sol\":640:677  int weth_usd_price = getLatestPrice() */\n      dup2\n        /* \"ChainLinkOracle.sol\":704:738  (1 * (10 ** 8)) * (1 * (10 ** 18)) */\n      0x52b7d2dcc80cd2e4000000\n        /* \"ChainLinkOracle.sol\":703:756  ((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"ChainLinkOracle.sol\":688:757  return uint256(((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price) */\n      swap2\n      pop\n      pop\n        /* \"ChainLinkOracle.sol\":577:765  function getUSDPrice() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":376:555   */\n    tag_22:\n        /* \"#utility.yul\":454:467   */\n      dup1\n      mload\n        /* \"#utility.yul\":507:529   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":496:530   */\n      dup2\n      and\n        /* \"#utility.yul\":486:531   */\n      dup2\n      eq\n        /* \"#utility.yul\":476:549   */\n      tag_27\n      jumpi\n        /* \"#utility.yul\":545:546   */\n      0x00\n        /* \"#utility.yul\":542:543   */\n      dup1\n        /* \"#utility.yul\":535:547   */\n      revert\n        /* \"#utility.yul\":476:549   */\n    tag_27:\n        /* \"#utility.yul\":376:555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":560:1033   */\n    tag_17:\n        /* \"#utility.yul\":663:669   */\n      0x00\n        /* \"#utility.yul\":671:677   */\n      dup1\n        /* \"#utility.yul\":679:685   */\n      0x00\n        /* \"#utility.yul\":687:693   */\n      dup1\n        /* \"#utility.yul\":695:701   */\n      0x00\n        /* \"#utility.yul\":748:751   */\n      0xa0\n        /* \"#utility.yul\":736:745   */\n      dup7\n        /* \"#utility.yul\":727:734   */\n      dup9\n        /* \"#utility.yul\":723:746   */\n      sub\n        /* \"#utility.yul\":719:752   */\n      slt\n        /* \"#utility.yul\":716:769   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":765:766   */\n      0x00\n        /* \"#utility.yul\":762:763   */\n      dup1\n        /* \"#utility.yul\":755:767   */\n      revert\n        /* \"#utility.yul\":716:769   */\n    tag_29:\n        /* \"#utility.yul\":788:827   */\n      tag_30\n        /* \"#utility.yul\":817:826   */\n      dup7\n        /* \"#utility.yul\":788:827   */\n      tag_22\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":778:827   */\n      swap5\n      pop\n        /* \"#utility.yul\":867:869   */\n      0x20\n        /* \"#utility.yul\":856:865   */\n      dup7\n        /* \"#utility.yul\":852:870   */\n      add\n        /* \"#utility.yul\":846:871   */\n      mload\n        /* \"#utility.yul\":836:871   */\n      swap4\n      pop\n        /* \"#utility.yul\":911:913   */\n      0x40\n        /* \"#utility.yul\":900:909   */\n      dup7\n        /* \"#utility.yul\":896:914   */\n      add\n        /* \"#utility.yul\":890:915   */\n      mload\n        /* \"#utility.yul\":880:915   */\n      swap3\n      pop\n        /* \"#utility.yul\":955:957   */\n      0x60\n        /* \"#utility.yul\":944:953   */\n      dup7\n        /* \"#utility.yul\":940:958   */\n      add\n        /* \"#utility.yul\":934:959   */\n      mload\n        /* \"#utility.yul\":924:959   */\n      swap2\n      pop\n        /* \"#utility.yul\":978:1027   */\n      tag_31\n        /* \"#utility.yul\":1022:1025   */\n      0x80\n        /* \"#utility.yul\":1011:1020   */\n      dup8\n        /* \"#utility.yul\":1007:1026   */\n      add\n        /* \"#utility.yul\":978:1027   */\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":968:1027   */\n      swap1\n      pop\n        /* \"#utility.yul\":560:1033   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1425   */\n    tag_21:\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1103:1104   */\n      dup3\n        /* \"#utility.yul\":1093:1225   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1147:1157   */\n      0x4e487b71\n        /* \"#utility.yul\":1142:1145   */\n      0xe0\n        /* \"#utility.yul\":1138:1158   */\n      shl\n        /* \"#utility.yul\":1135:1136   */\n      0x00\n        /* \"#utility.yul\":1128:1159   */\n      mstore\n        /* \"#utility.yul\":1182:1186   */\n      0x12\n        /* \"#utility.yul\":1179:1180   */\n      0x04\n        /* \"#utility.yul\":1172:1187   */\n      mstore\n        /* \"#utility.yul\":1210:1214   */\n      0x24\n        /* \"#utility.yul\":1207:1208   */\n      0x00\n        /* \"#utility.yul\":1200:1215   */\n      revert\n        /* \"#utility.yul\":1093:1225   */\n    tag_33:\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":1241:1259   */\n      dup3\n      eq\n      not(0x00)\n        /* \"#utility.yul\":1261:1274   */\n      dup5\n      eq\n        /* \"#utility.yul\":1237:1275   */\n      and\n        /* \"#utility.yul\":1234:1395   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1317:1327   */\n      0x4e487b71\n        /* \"#utility.yul\":1312:1315   */\n      0xe0\n        /* \"#utility.yul\":1308:1328   */\n      shl\n        /* \"#utility.yul\":1305:1306   */\n      0x00\n        /* \"#utility.yul\":1298:1329   */\n      mstore\n        /* \"#utility.yul\":1352:1356   */\n      0x11\n        /* \"#utility.yul\":1349:1350   */\n      0x04\n        /* \"#utility.yul\":1342:1357   */\n      mstore\n        /* \"#utility.yul\":1380:1384   */\n      0x24\n        /* \"#utility.yul\":1377:1378   */\n      0x00\n        /* \"#utility.yul\":1370:1385   */\n      revert\n        /* \"#utility.yul\":1234:1395   */\n    tag_34:\n      pop\n        /* \"#utility.yul\":1409:1419   */\n      sdiv\n      swap1\n        /* \"#utility.yul\":1038:1425   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204390b36ec61a0879d55736bc09d9714b34cd68c40330f2ce7e120e855d7b019464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_288": {
									"entryPoint": null,
									"id": 288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161028a38038061028a83398101604081905261002f9161005e565b600180546001600160a01b039092166001600160a01b031992831681179091556000805490921617905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6101ed8061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b578063c338287f14610055575b600080fd5b61004361005d565b60405190815260200160405180910390f35b6100436100d6565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa1580156100a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cb919061011d565b509195945050505050565b6000806100e161005d565b90506100f8816a52b7d2dcc80cd2e400000061016d565b91505090565b805169ffffffffffffffffffff8116811461011857600080fd5b919050565b600080600080600060a0868803121561013557600080fd5b61013e866100fe565b9450602086015193506040860151925060608601519150610161608087016100fe565b90509295509295909350565b60008261018a57634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156101b257634e487b7160e01b600052601160045260246000fd5b50059056fea26469706673582212204390b36ec61a0879d55736bc09d9714b34cd68c40330f2ce7e120e855d7b019464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x28A CODESIZE SUB DUP1 PUSH2 0x28A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x5E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1ED DUP1 PUSH2 0x9D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC338287F EQ PUSH2 0x55 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43 PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x11D JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE1 PUSH2 0x5D JUMP JUMPDEST SWAP1 POP PUSH2 0xF8 DUP2 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP7 PUSH2 0xFE JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x161 PUSH1 0x80 DUP8 ADD PUSH2 0xFE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x1B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SDIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP1 0xB3 PUSH15 0xC61A0879D55736BC09D9714B34CD68 0xC4 SUB ADDRESS CALLCODE 0xCE PUSH31 0x120E855D7B019464736F6C634300080A003300000000000000000000000000 ",
							"sourceMap": "138:632:4:-:0;;;253:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;307:19;:42;;-1:-1:-1;;;;;307:42:4;;;-1:-1:-1;;;;;;307:42:4;;;;;;;;:19;360:54;;;;;;;;138:632;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;138:632:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getLatestPrice_302": {
									"entryPoint": 93,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUSDPrice_335": {
									"entryPoint": 214,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1427:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "295:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "305:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "313:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "313:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "305:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "347:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "358:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "264:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "286:4:6",
														"type": ""
													}
												],
												"src": "194:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "435:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "445:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "460:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "454:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "445:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "533:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "542:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "545:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "535:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "535:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "535:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "489:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "500:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "507:22:6",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "496:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "496:34:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "486:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:45:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "479:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:53:6"
															},
															"nodeType": "YulIf",
															"src": "476:73:6"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "414:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "425:5:6",
														"type": ""
													}
												],
												"src": "376:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "706:327:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "753:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "762:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "765:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "755:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "755:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "755:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "727:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "736:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "748:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "719:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:33:6"
															},
															"nodeType": "YulIf",
															"src": "716:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "778:49:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "817:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "788:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:39:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "836:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "856:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "867:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "852:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "852:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "846:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:25:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "880:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "900:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "911:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "896:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "896:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "890:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "944:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "955:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "934:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:25:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "968:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1011:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1022:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1007:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1007:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "978:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:49:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "968:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "640:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "651:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "663:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "671:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "679:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "687:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "695:6:6",
														"type": ""
													}
												],
												"src": "560:473:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1083:342:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1135:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1142:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1147:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1138:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1138:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1128:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1128:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1179:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1182:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1172:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1172:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1172:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1210:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1200:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1200:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1200:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1103:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:9:6"
															},
															"nodeType": "YulIf",
															"src": "1093:132:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1284:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1305:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1312:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1317:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1308:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1308:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1298:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1298:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1298:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1352:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1342:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1377:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1380:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1370:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1370:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1370:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1244:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1251:3:6",
																						"type": "",
																						"value": "255"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1256:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1247:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1247:11:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1241:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1241:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1264:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1271:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1267:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1267:6:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1261:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1261:13:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1237:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:38:6"
															},
															"nodeType": "YulIf",
															"src": "1234:161:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1404:15:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1414:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1417:1:6"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "1409:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:10:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1404:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1068:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1071:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1077:1:6",
														"type": ""
													}
												],
												"src": "1038:387:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        if and(eq(x, shl(255, 1)), eq(y, not(0)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        r := sdiv(x, y)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b578063c338287f14610055575b600080fd5b61004361005d565b60405190815260200160405180910390f35b6100436100d6565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa1580156100a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cb919061011d565b509195945050505050565b6000806100e161005d565b90506100f8816a52b7d2dcc80cd2e400000061016d565b91505090565b805169ffffffffffffffffffff8116811461011857600080fd5b919050565b600080600080600060a0868803121561013557600080fd5b61013e866100fe565b9450602086015193506040860151925060608601519150610161608087016100fe565b90509295509295909350565b60008261018a57634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156101b257634e487b7160e01b600052601160045260246000fd5b50059056fea26469706673582212204390b36ec61a0879d55736bc09d9714b34cd68c40330f2ce7e120e855d7b019464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC338287F EQ PUSH2 0x55 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43 PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x11D JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE1 PUSH2 0x5D JUMP JUMPDEST SWAP1 POP PUSH2 0xF8 DUP2 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP7 PUSH2 0xFE JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x161 PUSH1 0x80 DUP8 ADD PUSH2 0xFE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x1B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SDIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP1 0xB3 PUSH15 0xC61A0879D55736BC09D9714B34CD68 0xC4 SUB ADDRESS CALLCODE 0xCE PUSH31 0x120E855D7B019464736F6C634300080A003300000000000000000000000000 ",
							"sourceMap": "138:632:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:139;;;:::i;:::-;;;158:25:6;;;146:2;131:18;430:139:4;;;;;;;577:188;;;:::i;430:139::-;477:3;511:9;;:27;;;-1:-1:-1;;;511:27:4;;;;477:3;;-1:-1:-1;;;;;511:9:4;;:25;;:27;;;;;;;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;493:45:4;;430:139;-1:-1:-1;;;;;430:139:4:o;577:188::-;620:7;640:18;661:16;:14;:16::i;:::-;640:37;-1:-1:-1;703:53:4;640:37;704:34;703:53;:::i;:::-;688:69;;;577:188;:::o;376:179:6:-;454:13;;507:22;496:34;;486:45;;476:73;;545:1;542;535:12;476:73;376:179;;;:::o;560:473::-;663:6;671;679;687;695;748:3;736:9;727:7;723:23;719:33;716:53;;;765:1;762;755:12;716:53;788:39;817:9;788:39;:::i;:::-;778:49;;867:2;856:9;852:18;846:25;836:35;;911:2;900:9;896:18;890:25;880:35;;955:2;944:9;940:18;934:25;924:35;;978:49;1022:3;1011:9;1007:19;978:49;:::i;:::-;968:59;;560:473;;;;;;;;:::o;1038:387::-;1077:1;1103;1093:132;;1147:10;1142:3;1138:20;1135:1;1128:31;1182:4;1179:1;1172:15;1210:4;1207:1;1200:15;1093:132;-1:-1:-1;;;1241:18:6;;-1:-1:-1;;1261:13:6;;1237:38;1234:161;;;1317:10;1312:3;1308:20;1305:1;1298:31;1352:4;1349:1;1342:15;1380:4;1377:1;1370:15;1234:161;-1:-1:-1;1409:10:6;;1038:387::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getLatestPrice()": "infinite",
								"getUSDPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 307,
									"end": 326,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 307,
									"end": 326,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 414,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204390b36ec61a0879d55736bc09d9714b34cd68c40330f2ce7e120e855d7b019464736f6c634300080a0033",
									".code": [
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "8E15F473"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "C338287F"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 158,
											"end": 183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 158,
											"end": 183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 158,
											"end": 183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 477,
											"end": 480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 477,
											"end": 480,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 511,
											"end": 520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "FEAF968C"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 493,
											"end": 538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 661,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 640,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 704,
											"end": 738,
											"name": "PUSH",
											"source": 4,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 688,
											"end": 757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 688,
											"end": 757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 688,
											"end": 757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 376,
											"end": 555,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 529,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 496,
											"end": 530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 486,
											"end": 531,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 476,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 476,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 476,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 476,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 555,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 376,
											"end": 555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 376,
											"end": 555,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 663,
											"end": 669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 679,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 695,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 727,
											"end": 734,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 723,
											"end": 746,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 719,
											"end": 752,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 716,
											"end": 769,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 716,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 716,
											"end": 769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 765,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 755,
											"end": 767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 716,
											"end": 769,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 716,
											"end": 769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 788,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 817,
											"end": 826,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 788,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 788,
											"end": 827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 827,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 788,
											"end": 827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 778,
											"end": 827,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 778,
											"end": 827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 865,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 852,
											"end": 870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 846,
											"end": 871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 836,
											"end": 871,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 836,
											"end": 871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 909,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 896,
											"end": 914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 890,
											"end": 915,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 880,
											"end": 915,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 880,
											"end": 915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 940,
											"end": 958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 959,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 924,
											"end": 959,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 924,
											"end": 959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1011,
											"end": 1020,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 978,
											"end": 1027,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1027,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 1033,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1038,
											"end": 1425,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1038,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1093,
											"end": 1225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1142,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1138,
											"end": 1158,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1214,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1225,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1093,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1274,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1274,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1275,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1395,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1234,
											"end": 1395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1317,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1308,
											"end": 1328,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 1357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1384,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1385,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1395,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1234,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 1419,
											"name": "SDIV",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1425,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getLatestPrice()": "8e15f473",
							"getUSDPrice()": "c338287f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddressListen\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ChainLinkOracle.sol\":\"ChainLinkOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"ChainLinkOracle.sol\":{\"keccak256\":\"0x9390220093eb3bd7590104e08077c69854035444e67d3b050b2dd433e3c193e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf0cd5e82e1d44e3e213e2de0d2019bda7b9413241615efcc2e01f62011a261\",\"dweb:/ipfs/QmUZVdYF7jw3Qpn3ac2zDD9Xf6GFA9UibxvyZt8EGp6oBW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FeeManager.sol": {
				"FeeManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_cancelFee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_acceptFee",
									"type": "uint256"
								}
							],
							"name": "Fee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "Holder",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "Oracle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_acceptFee",
									"type": "uint256"
								}
							],
							"name": "setAcceptFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_cancelFee",
									"type": "uint256"
								}
							],
							"name": "setCancelFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "newHolder",
									"type": "address"
								}
							],
							"name": "setHolder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOracle",
									"type": "address"
								}
							],
							"name": "setOracle",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v1.0",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAcceptFee(uint256)": {
								"params": {
									"_acceptFee": "is the amount in USD"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"FeeManager.sol\":370:371  1 */\n  0x01\n    /* \"FeeManager.sol\":340:371  uint256 private SERVICE_FEE = 1 */\n  dup1\n  sstore\n    /* \"FeeManager.sol\":415:416  2 */\n  0x02\n    /* \"FeeManager.sol\":378:416  uint256 private SERVICE_FEE_CANCEL = 2 */\n  dup1\n  sstore\n    /* \"FeeManager.sol\":460:461  2 */\n  0x02\n    /* \"FeeManager.sol\":423:461  uint256 private SERVICE_FEE_ACCEPT = 2 */\n  0x03\n  sstore\n    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  dup6\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap4\n  div\n  swap2\n  swap1\n  swap2\n  and\n  swap3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbff098b4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc2fffd6b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd979f5aa\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x14025dcd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3abecc49\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x69fe0e2d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7adbf973\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":1749:1874  function acceptFee() public view returns(uint256) {... */\n    tag_4:\n      tag_16\n      tag_21\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":361:375   */\n      swap1\n      iszero\n        /* \"#utility.yul\":354:376   */\n      iszero\n        /* \"#utility.yul\":336:377   */\n      dup2\n      mstore\n        /* \"#utility.yul\":324:326   */\n      0x20\n        /* \"#utility.yul\":309:327   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":196:383   */\n      jump\n        /* \"FeeManager.sol\":1551:1741  function setFee(uint256 _fee) public onlyOwner returns(bool) {... */\n    tag_6:\n      tag_23\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"FeeManager.sol\":2309:2487  function setOracle(address newOracle) public onlyOwner returns(bool) {... */\n    tag_8:\n      tag_23\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1125:1157   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1107:1158   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1095:1097   */\n      0x20\n        /* \"#utility.yul\":1080:1098   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_18\n        /* \"#utility.yul\":961:1164   */\n      jump\n        /* \"FeeManager.sol\":1017:1233  function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {... */\n    tag_10:\n      tag_23\n      tag_44\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"FeeManager.sol\":1286:1502  function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {... */\n    tag_11:\n      tag_23\n      tag_48\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"FeeManager.sol\":2135:2301  function setHolder(address payable newHolder) public onlyOwner returns(bool) {... */\n    tag_12:\n      tag_23\n      tag_52\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"FeeManager.sol\":2015:2127  function fee() public view returns(uint256) {... */\n    tag_13:\n      tag_16\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_32\n      tag_60\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {... */\n    tag_17:\n        /* \"FeeManager.sol\":1923:1930  uint256 */\n      0x00\n        /* \"FeeManager.sol\":1981:1999  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1974:1977  100 */\n      0x64\n        /* \"FeeManager.sol\":1951:1957  oracle */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FeeManager.sol\":1951:1969  oracle.getUSDPrice */\n      and\n      0xc338287f\n        /* \"FeeManager.sol\":1951:1971  oracle.getUSDPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"FeeManager.sol\":1951:1977  oracle.getUSDPrice() / 100 */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"FeeManager.sol\":1950:1999  (oracle.getUSDPrice() / 100) * SERVICE_FEE_CANCEL */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"FeeManager.sol\":1943:1999  return (oracle.getUSDPrice() / 100) * SERVICE_FEE_CANCEL */\n      swap1\n      pop\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"FeeManager.sol\":1749:1874  function acceptFee() public view returns(uint256) {... */\n    tag_21:\n        /* \"FeeManager.sol\":1790:1797  uint256 */\n      0x00\n        /* \"FeeManager.sol\":1848:1866  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1841:1844  100 */\n      0x64\n        /* \"FeeManager.sol\":1818:1824  oracle */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FeeManager.sol\":1818:1836  oracle.getUSDPrice */\n      and\n      0xc338287f\n        /* \"FeeManager.sol\":1818:1838  oracle.getUSDPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"FeeManager.sol\":1551:1741  function setFee(uint256 _fee) public onlyOwner returns(bool) {... */\n    tag_30:\n        /* \"FeeManager.sol\":1606:1610  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"FeeManager.sol\":1623:1634  SERVICE_FEE */\n      0x01\n        /* \"FeeManager.sol\":1623:1641  SERVICE_FEE = _fee */\n      dup3\n      swap1\n      sstore\n        /* \"FeeManager.sol\":1692:1710  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1673:1691  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1657:1711  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      mload(0x40)\n        /* \"FeeManager.sol\":1637:1641  _fee */\n      dup5\n      swap1\n        /* \"FeeManager.sol\":1657:1711  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      0x7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f57\n      swap1\n      0x00\n      swap1\n      log4\n      pop\n        /* \"FeeManager.sol\":1729:1733  true */\n      0x01\n        /* \"FeeManager.sol\":1551:1741  function setFee(uint256 _fee) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"FeeManager.sol\":2309:2487  function setOracle(address newOracle) public onlyOwner returns(bool) {... */\n    tag_37:\n        /* \"FeeManager.sol\":2372:2376  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_97:\n        /* \"FeeManager.sol\":2389:2395  oracle */\n      0x05\n        /* \"FeeManager.sol\":2389:2424  oracle = ChainLinkOracle(newOracle) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"FeeManager.sol\":2440:2457  Oracle(newOracle) */\n      mload(0x40)\n      0x6d4881172853e787189216de6d514b739b8ad6a331e19518c66d3dc2b93639b5\n      swap1\n      0x00\n      swap1\n      log2\n      pop\n        /* \"FeeManager.sol\":2475:2479  true */\n      0x01\n        /* \"FeeManager.sol\":2309:2487  function setOracle(address newOracle) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":1017:1233  function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {... */\n    tag_45:\n        /* \"FeeManager.sol\":1085:1089  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_104:\n        /* \"FeeManager.sol\":1102:1120  SERVICE_FEE_ACCEPT */\n      0x03\n        /* \"FeeManager.sol\":1102:1133  SERVICE_FEE_ACCEPT = _acceptFee */\n      dup3\n      swap1\n      sstore\n        /* \"FeeManager.sol\":1165:1183  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1153:1164  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":1149:1203  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      mload(0x40)\n        /* \"FeeManager.sol\":1123:1133  _acceptFee */\n      dup5\n      swap3\n        /* \"FeeManager.sol\":1165:1183  SERVICE_FEE_CANCEL */\n      swap2\n        /* \"FeeManager.sol\":1153:1164  SERVICE_FEE */\n      swap1\n        /* \"FeeManager.sol\":1149:1203  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      0x7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f57\n      swap1\n      0x00\n      swap1\n      log4\n      pop\n        /* \"FeeManager.sol\":1221:1225  true */\n      0x01\n        /* \"FeeManager.sol\":1017:1233  function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":1286:1502  function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {... */\n    tag_49:\n        /* \"FeeManager.sol\":1354:1358  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_110:\n        /* \"FeeManager.sol\":1371:1389  SERVICE_FEE_CANCEL */\n      0x02\n        /* \"FeeManager.sol\":1371:1402  SERVICE_FEE_CANCEL = _cancelFee */\n      dup3\n      swap1\n      sstore\n        /* \"FeeManager.sol\":1453:1471  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1422:1433  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":1418:1472  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      mload(0x40)\n        /* \"FeeManager.sol\":1392:1402  _cancelFee */\n      dup5\n      swap2\n        /* \"FeeManager.sol\":1422:1433  SERVICE_FEE */\n      swap1\n        /* \"FeeManager.sol\":1418:1472  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      0x7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f57\n      swap1\n      0x00\n      swap1\n      log4\n      pop\n        /* \"FeeManager.sol\":1490:1494  true */\n      0x01\n        /* \"FeeManager.sol\":1286:1502  function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":2135:2301  function setHolder(address payable newHolder) public onlyOwner returns(bool) {... */\n    tag_54:\n        /* \"FeeManager.sol\":2206:2210  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_116:\n        /* \"FeeManager.sol\":2223:2229  holder */\n      0x04\n        /* \"FeeManager.sol\":2223:2241  holder = newHolder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"FeeManager.sol\":2257:2271  Holder(holder) */\n      mload(0x40)\n      0x66743038d969508e26e3d032a34d950971853817a94fd22e88316055e1145bf4\n      swap1\n      0x00\n      swap1\n      log2\n      pop\n        /* \"FeeManager.sol\":2289:2293  true */\n      0x01\n        /* \"FeeManager.sol\":2135:2301  function setHolder(address payable newHolder) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":2015:2127  function fee() public view returns(uint256) {... */\n    tag_57:\n        /* \"FeeManager.sol\":2050:2057  uint256 */\n      0x00\n        /* \"FeeManager.sol\":2108:2119  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":2101:2104  100 */\n      0x64\n        /* \"FeeManager.sol\":2078:2084  oracle */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FeeManager.sol\":2078:2096  oracle.getUSDPrice */\n      and\n      0xc338287f\n        /* \"FeeManager.sol\":2078:2098  oracle.getUSDPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2655:2676   */\n      mstore\n        /* \"#utility.yul\":2712:2714   */\n      0x26\n        /* \"#utility.yul\":2692:2710   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2685:2715   */\n      mstore\n        /* \"#utility.yul\":2751:2785   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2731:2749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2724:2786   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2802:2820   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2795:2831   */\n      mstore\n        /* \"#utility.yul\":2848:2867   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_83\n        /* \"#utility.yul\":2471:2873   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap4\n      div\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":388:568   */\n    tag_29:\n        /* \"#utility.yul\":447:453   */\n      0x00\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":488:497   */\n      dup3\n        /* \"#utility.yul\":479:486   */\n      dup5\n        /* \"#utility.yul\":475:498   */\n      sub\n        /* \"#utility.yul\":471:503   */\n      slt\n        /* \"#utility.yul\":468:520   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":516:517   */\n      0x00\n        /* \"#utility.yul\":513:514   */\n      dup1\n        /* \"#utility.yul\":506:518   */\n      revert\n        /* \"#utility.yul\":468:520   */\n    tag_142:\n      pop\n        /* \"#utility.yul\":539:562   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":388:568   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":573:704   */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":648:679   */\n      dup2\n      and\n        /* \"#utility.yul\":638:680   */\n      dup2\n      eq\n        /* \"#utility.yul\":628:698   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":694:695   */\n      0x00\n        /* \"#utility.yul\":691:692   */\n      dup1\n        /* \"#utility.yul\":684:696   */\n      revert\n        /* \"#utility.yul\":709:956   */\n    tag_36:\n        /* \"#utility.yul\":768:774   */\n      0x00\n        /* \"#utility.yul\":821:823   */\n      0x20\n        /* \"#utility.yul\":809:818   */\n      dup3\n        /* \"#utility.yul\":800:807   */\n      dup5\n        /* \"#utility.yul\":796:819   */\n      sub\n        /* \"#utility.yul\":792:824   */\n      slt\n        /* \"#utility.yul\":789:841   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":837:838   */\n      0x00\n        /* \"#utility.yul\":834:835   */\n      dup1\n        /* \"#utility.yul\":827:839   */\n      revert\n        /* \"#utility.yul\":789:841   */\n    tag_146:\n        /* \"#utility.yul\":876:885   */\n      dup2\n        /* \"#utility.yul\":863:886   */\n      calldataload\n        /* \"#utility.yul\":895:926   */\n      tag_147\n        /* \"#utility.yul\":920:925   */\n      dup2\n        /* \"#utility.yul\":895:926   */\n      tag_137\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":945:950   */\n      swap4\n        /* \"#utility.yul\":709:956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1429:1613   */\n    tag_66:\n        /* \"#utility.yul\":1499:1505   */\n      0x00\n        /* \"#utility.yul\":1552:1554   */\n      0x20\n        /* \"#utility.yul\":1540:1549   */\n      dup3\n        /* \"#utility.yul\":1531:1538   */\n      dup5\n        /* \"#utility.yul\":1527:1550   */\n      sub\n        /* \"#utility.yul\":1523:1555   */\n      slt\n        /* \"#utility.yul\":1520:1572   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1568:1569   */\n      0x00\n        /* \"#utility.yul\":1565:1566   */\n      dup1\n        /* \"#utility.yul\":1558:1570   */\n      revert\n        /* \"#utility.yul\":1520:1572   */\n    tag_153:\n      pop\n        /* \"#utility.yul\":1591:1607   */\n      mload\n      swap2\n        /* \"#utility.yul\":1429:1613   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1618:1835   */\n    tag_68:\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1684:1685   */\n      dup3\n        /* \"#utility.yul\":1674:1806   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1728:1738   */\n      0x4e487b71\n        /* \"#utility.yul\":1723:1726   */\n      0xe0\n        /* \"#utility.yul\":1719:1739   */\n      shl\n        /* \"#utility.yul\":1716:1717   */\n      0x00\n        /* \"#utility.yul\":1709:1740   */\n      mstore\n        /* \"#utility.yul\":1763:1767   */\n      0x12\n        /* \"#utility.yul\":1760:1761   */\n      0x04\n        /* \"#utility.yul\":1753:1768   */\n      mstore\n        /* \"#utility.yul\":1791:1795   */\n      0x24\n        /* \"#utility.yul\":1788:1789   */\n      0x00\n        /* \"#utility.yul\":1781:1796   */\n      revert\n        /* \"#utility.yul\":1674:1806   */\n    tag_155:\n      pop\n        /* \"#utility.yul\":1820:1829   */\n      div\n      swap1\n        /* \"#utility.yul\":1618:1835   */\n      jump\t// out\n        /* \"#utility.yul\":1840:2105   */\n    tag_70:\n        /* \"#utility.yul\":1880:1887   */\n      0x00\n        /* \"#utility.yul\":1946:1947   */\n      dup2\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1938:1944   */\n      not\n        /* \"#utility.yul\":1934:1948   */\n      div\n        /* \"#utility.yul\":1931:1932   */\n      dup4\n        /* \"#utility.yul\":1928:1949   */\n      gt\n        /* \"#utility.yul\":1923:1924   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      iszero\n        /* \"#utility.yul\":1909:1926   */\n      iszero\n        /* \"#utility.yul\":1905:1950   */\n      and\n        /* \"#utility.yul\":1902:2070   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1992:2002   */\n      0x4e487b71\n        /* \"#utility.yul\":1987:1990   */\n      0xe0\n        /* \"#utility.yul\":1983:2003   */\n      shl\n        /* \"#utility.yul\":1980:1981   */\n      0x00\n        /* \"#utility.yul\":1973:2004   */\n      mstore\n        /* \"#utility.yul\":2027:2031   */\n      0x11\n        /* \"#utility.yul\":2024:2025   */\n      0x04\n        /* \"#utility.yul\":2017:2032   */\n      mstore\n        /* \"#utility.yul\":2055:2059   */\n      0x24\n        /* \"#utility.yul\":2052:2053   */\n      0x00\n        /* \"#utility.yul\":2045:2060   */\n      revert\n        /* \"#utility.yul\":1902:2070   */\n    tag_157:\n      pop\n        /* \"#utility.yul\":2090:2099   */\n      mul\n      swap1\n        /* \"#utility.yul\":1840:2105   */\n      jump\t// out\n        /* \"#utility.yul\":2110:2466   */\n    tag_84:\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2294:2315   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2331:2349   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2324:2354   */\n      mstore\n        /* \"#utility.yul\":2390:2424   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2385:2387   */\n      0x40\n        /* \"#utility.yul\":2370:2388   */\n      dup3\n      add\n        /* \"#utility.yul\":2363:2425   */\n      mstore\n        /* \"#utility.yul\":2457:2459   */\n      0x60\n        /* \"#utility.yul\":2442:2460   */\n      add\n      swap1\n        /* \"#utility.yul\":2110:2466   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d3dbcd8781826f7ef81c86de274c09b1d2de0604277e9d149f3d6a75b74df8f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_254": {
									"entryPoint": null,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 54,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001805560028055600260035534801561001d57600080fd5b506000805460ff1916905561003133610036565b61008f565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61079f8061009e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610123578063bff098b41461014c578063c2fffd6b1461015f578063d979f5aa14610172578063ddca3f4314610185578063f2fde38b1461018d57600080fd5b806314025dcd146100b95780633abecc49146100d45780635c975abb146100dc57806369fe0e2d146100f3578063715018a6146101065780637adbf97314610110575b600080fd5b6100c16101a0565b6040519081526020015b60405180910390f35b6100c1610237565b60005460ff165b60405190151581526020016100cb565b6100e361010136600461067a565b610291565b61010e610309565b005b6100e361011e3660046106a8565b610345565b60005461010090046001600160a01b03166040516001600160a01b0390911681526020016100cb565b6100e361015a36600461067a565b6103c5565b6100e361016d36600461067a565b610436565b6100e36101803660046106a8565b6104a6565b6100c1610526565b61010e61019b3660046106a8565b610580565b60006002546064600560009054906101000a90046001600160a01b03166001600160a01b031663c338287f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e91906106cc565b61022891906106e5565b6102329190610707565b905090565b60006003546064600560009054906101000a90046001600160a01b03166001600160a01b031663c338287f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b600080546001600160a01b036101009091041633146102cb5760405162461bcd60e51b81526004016102c290610734565b60405180910390fd5b600182905560035460025460405184907f7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f5790600090a4506001919050565b6000546001600160a01b036101009091041633146103395760405162461bcd60e51b81526004016102c290610734565b6103436000610621565b565b600080546001600160a01b036101009091041633146103765760405162461bcd60e51b81526004016102c290610734565b600580546001600160a01b0319166001600160a01b0384169081179091556040517f6d4881172853e787189216de6d514b739b8ad6a331e19518c66d3dc2b93639b590600090a2506001919050565b600080546001600160a01b036101009091041633146103f65760405162461bcd60e51b81526004016102c290610734565b6003829055600254600154604051849291907f7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f5790600090a4506001919050565b600080546001600160a01b036101009091041633146104675760405162461bcd60e51b81526004016102c290610734565b60028290556003546001546040518491907f7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f5790600090a4506001919050565b600080546001600160a01b036101009091041633146104d75760405162461bcd60e51b81526004016102c290610734565b600480546001600160a01b0319166001600160a01b0384169081179091556040517f66743038d969508e26e3d032a34d950971853817a94fd22e88316055e1145bf490600090a2506001919050565b60006001546064600560009054906101000a90046001600160a01b03166001600160a01b031663c338287f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b6000546001600160a01b036101009091041633146105b05760405162461bcd60e51b81526004016102c290610734565b6001600160a01b0381166106155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c2565b61061e81610621565b50565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60006020828403121561068c57600080fd5b5035919050565b6001600160a01b038116811461061e57600080fd5b6000602082840312156106ba57600080fd5b81356106c581610693565b9392505050565b6000602082840312156106de57600080fd5b5051919050565b60008261070257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561072f57634e487b7160e01b600052601160045260246000fd5b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212204d3dbcd8781826f7ef81c86de274c09b1d2de0604277e9d149f3d6a75b74df8f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SSTORE PUSH1 0x2 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x31 CALLER PUSH2 0x36 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x79F DUP1 PUSH2 0x9E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xBFF098B4 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC2FFFD6B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD979F5AA EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14025DCD EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3ABECC49 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x0 PUSH2 0x621 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6D4881172853E787189216DE6D514B739B8AD6A331E19518C66D3DC2B93639B5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 SWAP2 SWAP1 PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x66743038D969508E26E3D032A34D950971853817A94FD22E88316055E1145BF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x621 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6C5 DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x702 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x72F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D RETURNDATASIZE 0xBC 0xD8 PUSH25 0x1826F7EF81C86DE274C09B1D2DE0604277E9D149F3D6A75B74 0xDF DUP16 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "290:2320:5:-:0;;;370:1;340:31;;415:1;378:38;;460:1;423:38;;290:2320;;;;;;;;;-1:-1:-1;991:5:2;981:15;;-1:-1:-1;;981:15:2;;;921:32:1;719:10:3;921:18:1;:32::i;:::-;290:2320:5;;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:1;;;;;2410:40;;2362:6;;;;;;;2378:17;;2362:6;;2410:40;;;2333:124;2270:187;:::o;290:2320:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_254": {
									"entryPoint": null,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 1569,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptFee_460": {
									"entryPoint": 567,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cancelFee_475": {
									"entryPoint": 416,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_490": {
									"entryPoint": 1318,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_186": {
									"entryPoint": null,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_106": {
									"entryPoint": 777,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAcceptFee_399": {
									"entryPoint": 965,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setCancelFee_422": {
									"entryPoint": 1078,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setFee_445": {
									"entryPoint": 657,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setHolder_510": {
									"entryPoint": 1190,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setOracle_532": {
									"entryPoint": 837,
									"id": 532,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_129": {
									"entryPoint": 1408,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2875:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "291:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "301:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "313:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "324:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "301:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "368:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "361:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "361:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "354:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "260:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "271:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "282:4:6",
														"type": ""
													}
												],
												"src": "196:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "458:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "504:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "513:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "516:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "506:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "506:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "479:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "475:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:32:6"
															},
															"nodeType": "YulIf",
															"src": "468:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "529:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "552:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "539:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "424:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "435:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"src": "388:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "618:86:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "694:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "641:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "652:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "667:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "672:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "663:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "663:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "676:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "659:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "659:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "648:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "648:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:50:6"
															},
															"nodeType": "YulIf",
															"src": "628:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "607:5:6",
														"type": ""
													}
												],
												"src": "573:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "779:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "834:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "837:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "827:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "827:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "827:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "800:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "809:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "796:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "796:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "821:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "792:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:32:6"
															},
															"nodeType": "YulIf",
															"src": "789:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "850:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "876:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "863:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "854:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "920:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "895:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "935:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "945:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "768:6:6",
														"type": ""
													}
												],
												"src": "709:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1062:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1072:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1084:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1095:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1080:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1072:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1114:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1129:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1145:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1150:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1141:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1141:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1154:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1137:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1107:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1031:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1042:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1053:4:6",
														"type": ""
													}
												],
												"src": "961:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1293:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1302:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1305:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1295:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1295:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1295:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1268:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1277:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1260:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:32:6"
															},
															"nodeType": "YulIf",
															"src": "1257:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1318:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1331:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1322:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1388:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1363:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1363:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1403:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1413:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1224:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1236:6:6",
														"type": ""
													}
												],
												"src": "1169:255:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1510:103:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1556:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1565:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1568:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1558:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1558:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1558:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1531:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1540:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:32:6"
															},
															"nodeType": "YulIf",
															"src": "1520:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1581:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1499:6:6",
														"type": ""
													}
												],
												"src": "1429:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1664:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1695:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1716:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1723:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1728:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1719:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1719:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1709:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1709:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1709:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1760:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1763:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1753:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1753:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1753:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1788:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1791:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1781:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1781:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1781:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1684:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:9:6"
															},
															"nodeType": "YulIf",
															"src": "1674:132:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1815:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1824:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1827:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1820:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1815:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1649:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1652:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1658:1:6",
														"type": ""
													}
												],
												"src": "1618:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1892:213:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1980:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1987:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1992:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1983:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1983:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1973:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1973:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1973:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2027:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2017:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2052:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2055:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2045:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2045:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1923:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1916:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1916:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1909:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1909:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1931:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1942:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1938:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1938:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1946:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1934:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1934:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1928:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1928:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1905:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:45:6"
															},
															"nodeType": "YulIf",
															"src": "1902:168:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2079:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2094:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2097:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2090:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2079:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1871:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1874:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1880:7:6",
														"type": ""
													}
												],
												"src": "1840:265:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2335:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2346:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2351:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2374:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2385:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2370:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2370:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2390:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2363:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2363:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2434:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2261:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2275:4:6",
														"type": ""
													}
												],
												"src": "2110:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2662:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2696:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2707:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2685:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2735:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2746:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2751:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2724:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2817:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2822:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2840:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2852:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2863:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2840:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2622:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2636:4:6",
														"type": ""
													}
												],
												"src": "2471:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610123578063bff098b41461014c578063c2fffd6b1461015f578063d979f5aa14610172578063ddca3f4314610185578063f2fde38b1461018d57600080fd5b806314025dcd146100b95780633abecc49146100d45780635c975abb146100dc57806369fe0e2d146100f3578063715018a6146101065780637adbf97314610110575b600080fd5b6100c16101a0565b6040519081526020015b60405180910390f35b6100c1610237565b60005460ff165b60405190151581526020016100cb565b6100e361010136600461067a565b610291565b61010e610309565b005b6100e361011e3660046106a8565b610345565b60005461010090046001600160a01b03166040516001600160a01b0390911681526020016100cb565b6100e361015a36600461067a565b6103c5565b6100e361016d36600461067a565b610436565b6100e36101803660046106a8565b6104a6565b6100c1610526565b61010e61019b3660046106a8565b610580565b60006002546064600560009054906101000a90046001600160a01b03166001600160a01b031663c338287f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e91906106cc565b61022891906106e5565b6102329190610707565b905090565b60006003546064600560009054906101000a90046001600160a01b03166001600160a01b031663c338287f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b600080546001600160a01b036101009091041633146102cb5760405162461bcd60e51b81526004016102c290610734565b60405180910390fd5b600182905560035460025460405184907f7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f5790600090a4506001919050565b6000546001600160a01b036101009091041633146103395760405162461bcd60e51b81526004016102c290610734565b6103436000610621565b565b600080546001600160a01b036101009091041633146103765760405162461bcd60e51b81526004016102c290610734565b600580546001600160a01b0319166001600160a01b0384169081179091556040517f6d4881172853e787189216de6d514b739b8ad6a331e19518c66d3dc2b93639b590600090a2506001919050565b600080546001600160a01b036101009091041633146103f65760405162461bcd60e51b81526004016102c290610734565b6003829055600254600154604051849291907f7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f5790600090a4506001919050565b600080546001600160a01b036101009091041633146104675760405162461bcd60e51b81526004016102c290610734565b60028290556003546001546040518491907f7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f5790600090a4506001919050565b600080546001600160a01b036101009091041633146104d75760405162461bcd60e51b81526004016102c290610734565b600480546001600160a01b0319166001600160a01b0384169081179091556040517f66743038d969508e26e3d032a34d950971853817a94fd22e88316055e1145bf490600090a2506001919050565b60006001546064600560009054906101000a90046001600160a01b03166001600160a01b031663c338287f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b6000546001600160a01b036101009091041633146105b05760405162461bcd60e51b81526004016102c290610734565b6001600160a01b0381166106155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c2565b61061e81610621565b50565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60006020828403121561068c57600080fd5b5035919050565b6001600160a01b038116811461061e57600080fd5b6000602082840312156106ba57600080fd5b81356106c581610693565b9392505050565b6000602082840312156106de57600080fd5b5051919050565b60008261070257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561072f57634e487b7160e01b600052601160045260246000fd5b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212204d3dbcd8781826f7ef81c86de274c09b1d2de0604277e9d149f3d6a75b74df8f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xBFF098B4 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC2FFFD6B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD979F5AA EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14025DCD EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3ABECC49 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x0 PUSH2 0x621 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6D4881172853E787189216DE6D514B739B8AD6A331E19518C66D3DC2B93639B5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 SWAP3 SWAP2 SWAP1 PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 SWAP2 SWAP1 PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x66743038D969508E26E3D032A34D950971853817A94FD22E88316055E1145BF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x621 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6C5 DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x702 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x72F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D RETURNDATASIZE 0xBC 0xD8 PUSH25 0x1826F7EF81C86DE274C09B1D2DE0604277E9D149F3D6A75B74 0xDF DUP16 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "290:2320:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:125;;;:::i;:::-;;;160:25:6;;;148:2;133:18;1882:125:5;;;;;;;;1749;;;:::i;1098:84:2:-;1145:4;1168:7;;;1098:84;;;361:14:6;;354:22;336:41;;324:2;309:18;1098:84:2;196:187:6;1551:190:5;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;:::-;;2309:178:5;;;;;;:::i;:::-;;:::i;1036:85:1:-;1082:7;1108:6;;;;-1:-1:-1;;;;;1108:6:1;1036:85;;-1:-1:-1;;;;;1125:32:6;;;1107:51;;1095:2;1080:18;1036:85:1;961:203:6;1017:216:5;;;;;;:::i;:::-;;:::i;1286:::-;;;;;;:::i;:::-;;:::i;2135:166::-;;;;;;:::i;:::-;;:::i;2015:112::-;;;:::i;1918:198:1:-;;;;;;:::i;:::-;;:::i;1882:125:5:-;1923:7;1981:18;;1974:3;1951:6;;;;;;;;;-1:-1:-1;;;;;1951:6:5;-1:-1:-1;;;;;1951:18:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;1950:49;;;;:::i;:::-;1943:56;;1882:125;:::o;1749:::-;1790:7;1848:18;;1841:3;1818:6;;;;;;;;;-1:-1:-1;;;;;1818:6:5;-1:-1:-1;;;;;1818:18:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:190;1606:4;1108:6:1;;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;1623:11:5::1;:18:::0;;;1692::::1;::::0;1673::::1;::::0;1657:54:::1;::::0;1637:4;;1657:54:::1;::::0;;;::::1;-1:-1:-1::0;1729:4:5::1;1551:190:::0;;;:::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2309:178:5:-;2372:4;1108:6:1;;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;2389:6:5::1;:35:::0;;-1:-1:-1;;;;;;2389:35:5::1;-1:-1:-1::0;;;;;2389:35:5;::::1;::::0;;::::1;::::0;;;2440:17:::1;::::0;::::1;::::0;-1:-1:-1;;2440:17:5::1;-1:-1:-1::0;2475:4:5::1;2309:178:::0;;;:::o;1017:216::-;1085:4;1108:6:1;;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1102:18:5::1;:31:::0;;;1165:18:::1;::::0;1153:11:::1;::::0;1149:54:::1;::::0;1123:10;;1165:18;1153:11;1149:54:::1;::::0;;;::::1;-1:-1:-1::0;1221:4:5::1;1017:216:::0;;;:::o;1286:::-;1354:4;1108:6:1;;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1371:18:5::1;:31:::0;;;1453:18:::1;::::0;1422:11:::1;::::0;1418:54:::1;::::0;1392:10;;1422:11;1418:54:::1;::::0;;;::::1;-1:-1:-1::0;1490:4:5::1;1286:216:::0;;;:::o;2135:166::-;2206:4;1108:6:1;;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;2223:6:5::1;:18:::0;;-1:-1:-1;;;;;;2223:18:5::1;-1:-1:-1::0;;;;;2223:18:5;::::1;::::0;;::::1;::::0;;;2257:14:::1;::::0;::::1;::::0;-1:-1:-1;;2257:14:5::1;-1:-1:-1::0;2289:4:5::1;2135:166:::0;;;:::o;2015:112::-;2050:7;2108:11;;2101:3;2078:6;;;;;;;;;-1:-1:-1;;;;;2078:6:5;-1:-1:-1;;;;;2078:18:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:198:1;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;;;;;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;2673:2:6;1998:73:1::1;::::0;::::1;2655:21:6::0;2712:2;2692:18;;;2685:30;2751:34;2731:18;;;2724:62;-1:-1:-1;;;2802:18:6;;;2795:36;2848:19;;1998:73:1::1;2471:402:6::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:1;;;;;2410:40;;2362:6;;;;;;;2378:17;;2362:6;;2410:40;;;2333:124;2270:187;:::o;388:180:6:-;447:6;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;-1:-1:-1;539:23:6;;388:180;-1:-1:-1;388:180:6:o;573:131::-;-1:-1:-1;;;;;648:31:6;;638:42;;628:70;;694:1;691;684:12;709:247;768:6;821:2;809:9;800:7;796:23;792:32;789:52;;;837:1;834;827:12;789:52;876:9;863:23;895:31;920:5;895:31;:::i;:::-;945:5;709:247;-1:-1:-1;;;709:247:6:o;1429:184::-;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;-1:-1:-1;1591:16:6;;1429:184;-1:-1:-1;1429:184:6:o;1618:217::-;1658:1;1684;1674:132;;1728:10;1723:3;1719:20;1716:1;1709:31;1763:4;1760:1;1753:15;1791:4;1788:1;1781:15;1674:132;-1:-1:-1;1820:9:6;;1618:217::o;1840:265::-;1880:7;1946:1;1942;1938:6;1934:14;1931:1;1928:21;1923:1;1916:9;1909:17;1905:45;1902:168;;;1992:10;1987:3;1983:20;1980:1;1973:31;2027:4;2024:1;2017:15;2055:4;2052:1;2045:15;1902:168;-1:-1:-1;2090:9:6;;1840:265::o;2110:356::-;2312:2;2294:21;;;2331:18;;;2324:30;2390:34;2385:2;2370:18;;2363:62;2457:2;2442:18;;2110:356::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "390200",
								"executionCost": "116823",
								"totalCost": "507023"
							},
							"external": {
								"acceptFee()": "infinite",
								"cancelFee()": "infinite",
								"fee()": "infinite",
								"owner()": "2330",
								"paused()": "2338",
								"renounceOwnership()": "28239",
								"setAcceptFee(uint256)": "30696",
								"setCancelFee(uint256)": "30715",
								"setFee(uint256)": "30735",
								"setHolder(address)": "28001",
								"setOracle(address)": "28046",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"retriveFee()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 371,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 340,
									"end": 371,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 415,
									"end": 416,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 378,
									"end": 416,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 378,
									"end": 416,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 461,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 423,
									"end": 461,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 423,
									"end": 461,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d3dbcd8781826f7ef81c86de274c09b1d2de0604277e9d149f3d6a75b74df8f64736f6c634300080a0033",
									".code": [
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "BFF098B4"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "C2FFFD6B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "D979F5AA"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "DDCA3F43"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "14025DCD"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "3ABECC49"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "5C975ABB"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "69FE0E2D"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "7ADBF973"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 361,
											"end": 375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 361,
											"end": 375,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 354,
											"end": 376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 336,
											"end": 377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 324,
											"end": 326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 196,
											"end": 383,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1125,
											"end": 1157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 1164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1999,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1981,
											"end": 1999,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "C338287F"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "C338287F"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "PUSH",
											"source": 5,
											"value": "7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57"
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "6D4881172853E787189216DE6D514B739B8AD6A331E19518C66D3DC2B93639B5"
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1164,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1153,
											"end": 1164,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1133,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1133,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57"
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1225,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57"
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "66743038D969508E26E3D032A34D950971853817A94FD22E88316055E1145BF4"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2119,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "C338287F"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2785,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2831,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2867,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2848,
											"end": 2867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2471,
											"end": 2873,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 388,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 388,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 447,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 488,
											"end": 497,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 479,
											"end": 486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 475,
											"end": 498,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 471,
											"end": 503,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 468,
											"end": 520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 468,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 516,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 506,
											"end": 518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 468,
											"end": 520,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 388,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 568,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 704,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 573,
											"end": 704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 648,
											"end": 679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 648,
											"end": 679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 638,
											"end": 680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 638,
											"end": 680,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 628,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 628,
											"end": 698,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 694,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 684,
											"end": 696,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 709,
											"end": 956,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 709,
											"end": 956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 800,
											"end": 807,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 796,
											"end": 819,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 792,
											"end": 824,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 789,
											"end": 841,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 789,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 789,
											"end": 841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 837,
											"end": 838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 839,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 789,
											"end": 841,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 789,
											"end": 841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 863,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 920,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 945,
											"end": 950,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 709,
											"end": 956,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 709,
											"end": 956,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1613,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1555,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1572,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1520,
											"end": 1572,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1570,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1572,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1520,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1591,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1429,
											"end": 1613,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 1835,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1618,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1674,
											"end": 1806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1723,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1719,
											"end": 1739,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 1768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1674,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1829,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1835,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1840,
											"end": 2105,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1840,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1949,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1909,
											"end": 1926,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2070,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1902,
											"end": 2070,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1987,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 2004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1902,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 2105,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2110,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2466,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptFee()": "3abecc49",
							"cancelFee()": "14025dcd",
							"fee()": "ddca3f43",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setAcceptFee(uint256)": "bff098b4",
							"setCancelFee(uint256)": "c2fffd6b",
							"setFee(uint256)": "69fe0e2d",
							"setHolder(address)": "d979f5aa",
							"setOracle(address)": "7adbf973",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_cancelFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_acceptFee\",\"type\":\"uint256\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"Holder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"Oracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_acceptFee\",\"type\":\"uint256\"}],\"name\":\"setAcceptFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cancelFee\",\"type\":\"uint256\"}],\"name\":\"setCancelFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newHolder\",\"type\":\"address\"}],\"name\":\"setHolder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v1.0\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAcceptFee(uint256)\":{\"params\":{\"_acceptFee\":\"is the amount in USD\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setAcceptFee(uint256)\":{\"notice\":\"NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount by default is 2 USD Requirements:\"},\"setCancelFee(uint256)\":{\"notice\":\"NOTE: _cancelFee\"},\"setFee(uint256)\":{\"notice\":\"NOTE: _fee\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FeeManager.sol\":\"FeeManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ChainLinkOracle.sol\":{\"keccak256\":\"0x9390220093eb3bd7590104e08077c69854035444e67d3b050b2dd433e3c193e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf0cd5e82e1d44e3e213e2de0d2019bda7b9413241615efcc2e01f62011a261\",\"dweb:/ipfs/QmUZVdYF7jw3Qpn3ac2zDD9Xf6GFA9UibxvyZt8EGp6oBW\"]},\"FeeManager.sol\":{\"keccak256\":\"0x73981159e8f1a53ceb08a077b24c4bb051c68b8a15934447f42c8c78a0becd03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c7b59fb2eec8a924c11209c9ed2fe46b5240e0075815473b33dc5f94627a84d\",\"dweb:/ipfs/QmYARBLvDuSPd9M3hjC56psbo2f628JAcdUkeLcftUtUgP\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setAcceptFee(uint256)": {
								"notice": "NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount by default is 2 USD Requirements:"
							},
							"setCancelFee(uint256)": {
								"notice": "NOTE: _cancelFee"
							},
							"setFee(uint256)": {
								"notice": "NOTE: _fee"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "487:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "500:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "559:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "588:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "610:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "602:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "635:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "627:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "659:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "652:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:0"
									},
									"scope": 45,
									"src": "478:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "694:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "761:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "754:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "783:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "776:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "805:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "797:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "830:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "822:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "854:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "847:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:129:0"
									},
									"scope": 45,
									"src": "685:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:821:0",
							"usedErrors": []
						}
					],
					"src": "32:847:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							264
						],
						"Ownable": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 265,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 50,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "668:7:1"
									},
									"id": 51,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 49,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150,
								264
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 52,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 64,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 63,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 150,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 75,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 150,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 82,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 84,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 90,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 92,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 99,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 96,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 95,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 150,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 115,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 111,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 150,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 135,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"id": 137,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 150,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							264
						],
						"Pausable": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 265,
							"src": "115:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "617:7:2"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242,
								264
							],
							"name": "Pausable",
							"nameLocation": "605:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 161,
									"name": "Paused",
									"nameLocation": "715:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "722:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:2"
									},
									"src": "709:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 166,
									"name": "Unpaused",
									"nameLocation": "826:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "835:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:2"
									},
									"src": "820:32:2"
								},
								{
									"constant": false,
									"id": 168,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "858:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 167,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "971:32:2",
										"statements": [
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "981:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "981:15:2"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:2"
									},
									"scope": 242,
									"src": "957:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1151:31:2",
										"statements": [
											{
												"expression": {
													"id": 183,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "1168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 182,
												"id": 184,
												"nodeType": "Return",
												"src": "1161:14:2"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:2"
									},
									"scope": 242,
									"src": "1098:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1393:66:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 190,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "1412:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:2"
											},
											{
												"id": 196,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:2"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 198,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:2"
									},
									"src": "1368:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1659:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 202,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1677:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:2"
											},
											{
												"id": 207,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:2"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 209,
									"name": "whenPaused",
									"nameLocation": "1646:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"src": "1637:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "1912:66:2",
										"statements": [
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1922:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 220,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1958:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1951:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "EmitStatement",
												"src": "1946:25:2"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 212,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 198,
												"src": "1898:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:2"
									},
									"scope": 242,
									"src": "1863:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2158:69:2",
										"statements": [
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2168:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 236,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "2207:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 235,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2198:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "EmitStatement",
												"src": "2193:27:2"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 228,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 209,
												"src": "2147:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:2"
									},
									"scope": 242,
									"src": "2110:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "587:1642:2",
							"usedErrors": []
						}
					],
					"src": "90:2140:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							264
						]
					},
					"id": 265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 245,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 264,
							"linearizedBaseContracts": [
								264
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 250,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 249,
												"id": 252,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 264,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 264,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 265,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"ChainLinkOracle.sol": {
				"ast": {
					"absolutePath": "ChainLinkOracle.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ChainLinkOracle": [
							336
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 46,
							"src": "58:76:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ChainLinkOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336
							],
							"name": "ChainLinkOracle",
							"nameLocation": "147:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 270,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "201:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "170:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 269,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 268,
											"name": "AggregatorV3Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "170:21:4"
										},
										"referencedDeclaration": 45,
										"src": "170:21:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 272,
									"mutability": "mutable",
									"name": "oracleAddressListen",
									"nameLocation": "225:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "217:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 271,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "296:126:4",
										"statements": [
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "oracleAddressListen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "307:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_oracleAddressListen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "329:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "307:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "307:42:4"
											},
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 281,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "360:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 283,
																"name": "oracleAddressListen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "394:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 282,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "372:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "372:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "360:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "360:54:4"
											}
										]
									},
									"id": 288,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "_oracleAddressListen",
												"nameLocation": "273:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "265:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:30:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:4"
									},
									"scope": 336,
									"src": "253:169:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "482:87:4",
										"statements": [
											{
												"assignments": [
													null,
													294,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "499:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "495:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 293,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "495:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 298,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 295,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "511:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "511:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "493:45:4"
											},
											{
												"expression": {
													"id": 299,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 294,
													"src": "556:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 292,
												"id": 300,
												"nodeType": "Return",
												"src": "549:12:4"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "439:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:4"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "477:3:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 290,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "477:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:5:4"
									},
									"scope": 336,
									"src": "430:139:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "629:136:4",
										"statements": [
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "weth_usd_price",
														"nameLocation": "644:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "640:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 307,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "640:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "661:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
															"typeString": "function () view returns (int256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "661:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "640:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																			"typeString": "int_const 100000000000000000000000000"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					},
																					"id": 319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "705:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_100000000_by_1",
																									"typeString": "int_const 100000000"
																								},
																								"id": 317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 315,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "710:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 316,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "716:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "710:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100000000_by_1",
																									"typeString": "int_const 100000000"
																								}
																							}
																						],
																						"id": 318,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "709:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000000_by_1",
																							"typeString": "int_const 100000000"
																						}
																					},
																					"src": "705:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				}
																			],
																			"id": 320,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "704:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "723:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"id": 324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 322,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "728:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 323,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "734:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "728:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							}
																						],
																						"id": 325,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "727:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "723:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				}
																			],
																			"id": 327,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "722:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		},
																		"src": "704:34:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																			"typeString": "int_const 100000000000000000000000000"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "703:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 330,
																"name": "weth_usd_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "742:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "703:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "695:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "695:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 333,
												"nodeType": "Return",
												"src": "688:69:4"
											}
										]
									},
									"functionSelector": "c338287f",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUSDPrice",
									"nameLocation": "586:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "620:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:9:4"
									},
									"scope": 336,
									"src": "577:188:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 337,
							"src": "138:632:4",
							"usedErrors": []
						}
					],
					"src": "33:737:4"
				},
				"id": 4
			},
			"FeeManager.sol": {
				"ast": {
					"absolutePath": "FeeManager.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ChainLinkOracle": [
							336
						],
						"Context": [
							264
						],
						"FeeManager": [
							548
						],
						"Ownable": [
							150
						],
						"Pausable": [
							242
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "80:23:5"
						},
						{
							"absolutePath": "ChainLinkOracle.sol",
							"file": "./ChainLinkOracle.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 337,
							"src": "105:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 151,
							"src": "138:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 243,
							"src": "192:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"id": 343,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "313:8:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "313:10:5"
								},
								{
									"baseName": {
										"id": 345,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 150,
										"src": "325:7:5"
									},
									"id": 346,
									"nodeType": "InheritanceSpecifier",
									"src": "325:7:5"
								}
							],
							"canonicalName": "FeeManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "249:39:5",
								"text": " @dev _Available since v1.0"
							},
							"fullyImplemented": true,
							"id": 548,
							"linearizedBaseContracts": [
								548,
								150,
								242,
								264
							],
							"name": "FeeManager",
							"nameLocation": "299:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "SERVICE_FEE",
									"nameLocation": "356:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "340:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "370:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 352,
									"mutability": "mutable",
									"name": "SERVICE_FEE_CANCEL",
									"nameLocation": "394:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "378:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 351,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "415:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "SERVICE_FEE_ACCEPT",
									"nameLocation": "439:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "423:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "423:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "460:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "holder",
									"nameLocation": "484:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "468:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 356,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "468:15:5",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "521:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "497:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
										"typeString": "contract ChainLinkOracle"
									},
									"typeName": {
										"id": 359,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 358,
											"name": "ChainLinkOracle",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 336,
											"src": "497:15:5"
										},
										"referencedDeclaration": 336,
										"src": "497:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
											"typeString": "contract ChainLinkOracle"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 364,
									"name": "Oracle",
									"nameLocation": "542:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "575:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "559:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:40:5"
									},
									"src": "536:53:5"
								},
								{
									"anonymous": false,
									"id": 368,
									"name": "Holder",
									"nameLocation": "601:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "634:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "618:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:40:5"
									},
									"src": "595:53:5"
								},
								{
									"anonymous": false,
									"id": 376,
									"name": "Fee",
									"nameLocation": "662:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "692:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "676:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "_cancelFee",
												"nameLocation": "722:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "706:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "_acceptFee",
												"nameLocation": "759:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "743:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:111:5"
									},
									"src": "656:121:5"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "1091:142:5",
										"statements": [
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 386,
														"name": "SERVICE_FEE_ACCEPT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1102:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 387,
														"name": "_acceptFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "1123:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1102:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1102:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "SERVICE_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1153:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 392,
															"name": "SERVICE_FEE_CANCEL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1165:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 393,
															"name": "SERVICE_FEE_ACCEPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1184:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1149:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "EmitStatement",
												"src": "1144:59:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1221:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 385,
												"id": 397,
												"nodeType": "Return",
												"src": "1214:11:5"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "785:226:5",
										"text": " NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount\n by default is 2 USD\n Requirements:\n @param _acceptFee is the amount in USD"
									},
									"functionSelector": "bff098b4",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 381,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1066:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1066:9:5"
										}
									],
									"name": "setAcceptFee",
									"nameLocation": "1026:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_acceptFee",
												"nameLocation": "1047:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1039:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:20:5"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1085:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1085:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:6:5"
									},
									"scope": 548,
									"src": "1017:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1360:142:5",
										"statements": [
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "SERVICE_FEE_CANCEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1371:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "_cancelFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1392:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1371:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1371:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 414,
															"name": "SERVICE_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1422:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 415,
															"name": "SERVICE_FEE_CANCEL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1434:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 416,
															"name": "SERVICE_FEE_ACCEPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1453:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1418:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "1413:59:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1490:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 408,
												"id": 420,
												"nodeType": "Return",
												"src": "1483:11:5"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1239:41:5",
										"text": "NOTE: _cancelFee"
									},
									"functionSelector": "c2fffd6b",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1335:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1335:9:5"
										}
									],
									"name": "setCancelFee",
									"nameLocation": "1295:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "_cancelFee",
												"nameLocation": "1316:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1308:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:20:5"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1354:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1354:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:6:5"
									},
									"scope": 548,
									"src": "1286:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1612:129:5",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "SERVICE_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1623:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1637:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1623:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1623:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "SERVICE_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1661:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 438,
															"name": "SERVICE_FEE_CANCEL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1673:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 439,
															"name": "SERVICE_FEE_ACCEPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1692:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1657:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "EmitStatement",
												"src": "1652:59:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1729:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 431,
												"id": 443,
												"nodeType": "Return",
												"src": "1722:11:5"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1510:35:5",
										"text": "NOTE: _fee"
									},
									"functionSelector": "69fe0e2d",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 427,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1588:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1588:9:5"
										}
									],
									"name": "setFee",
									"nameLocation": "1560:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "1575:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1567:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:14:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1606:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1606:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:6:5"
									},
									"scope": 548,
									"src": "1551:190:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1799:75:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 450,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "1818:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
																				"typeString": "contract ChainLinkOracle"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getUSDPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 335,
																		"src": "1818:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:20:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1841:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1818:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1817:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 456,
														"name": "SERVICE_FEE_ACCEPT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1848:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1817:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 458,
												"nodeType": "Return",
												"src": "1810:56:5"
											}
										]
									},
									"functionSelector": "3abecc49",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptFee",
									"nameLocation": "1758:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:9:5"
									},
									"scope": 548,
									"src": "1749:125:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1932:75:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 465,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "1951:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
																				"typeString": "contract ChainLinkOracle"
																			}
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getUSDPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 335,
																		"src": "1951:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1951:20:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1974:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1951:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 470,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1950:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 471,
														"name": "SERVICE_FEE_CANCEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1981:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1950:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 473,
												"nodeType": "Return",
												"src": "1943:56:5"
											}
										]
									},
									"functionSelector": "14025dcd",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelFee",
									"nameLocation": "1891:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:2:5"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1923:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:9:5"
									},
									"scope": 548,
									"src": "1882:125:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "2059:68:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 480,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "2078:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
																				"typeString": "contract ChainLinkOracle"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getUSDPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 335,
																		"src": "2078:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2078:20:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2101:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2078:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 485,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2077:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 486,
														"name": "SERVICE_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2108:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2077:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 479,
												"id": 488,
												"nodeType": "Return",
												"src": "2070:49:5"
											}
										]
									},
									"functionSelector": "ddca3f43",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "2024:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:5"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:9:5"
									},
									"scope": 548,
									"src": "2015:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2212:89:5",
										"statements": [
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2223:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 500,
														"name": "newHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "2232:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2223:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2223:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 504,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2264:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 503,
														"name": "Holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2257:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "2252:19:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2289:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 498,
												"id": 508,
												"nodeType": "Return",
												"src": "2282:11:5"
											}
										]
									},
									"functionSelector": "d979f5aa",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 495,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 494,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "2188:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2188:9:5"
										}
									],
									"name": "setHolder",
									"nameLocation": "2144:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "newHolder",
												"nameLocation": "2170:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2154:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2154:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:27:5"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2206:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2206:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:6:5"
									},
									"scope": 548,
									"src": "2135:166:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2378:109:5",
										"statements": [
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2389:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
															"typeString": "contract ChainLinkOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 521,
																"name": "newOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2414:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 520,
															"name": "ChainLinkOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "2398:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ChainLinkOracle_$336_$",
																"typeString": "type(contract ChainLinkOracle)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2398:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
															"typeString": "contract ChainLinkOracle"
														}
													},
													"src": "2389:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
														"typeString": "contract ChainLinkOracle"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2389:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 526,
															"name": "newOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2447:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 525,
														"name": "Oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2440:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "EmitStatement",
												"src": "2435:22:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2475:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 518,
												"id": 530,
												"nodeType": "Return",
												"src": "2468:11:5"
											}
										]
									},
									"functionSelector": "7adbf973",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 515,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 514,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "2354:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2354:9:5"
										}
									],
									"name": "setOracle",
									"nameLocation": "2318:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "newOracle",
												"nameLocation": "2336:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2328:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2327:19:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2372:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2372:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:6:5"
									},
									"scope": 548,
									"src": "2309:178:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "2540:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2567:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2567:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 537,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2551:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2551:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2551:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 536,
												"id": 545,
												"nodeType": "Return",
												"src": "2588:11:5"
											}
										]
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retriveFee",
									"nameLocation": "2504:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:2:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2534:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2534:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:6:5"
									},
									"scope": 548,
									"src": "2495:112:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 549,
							"src": "290:2320:5",
							"usedErrors": []
						}
					],
					"src": "80:2530:5"
				},
				"id": 5
			}
		}
	}
}