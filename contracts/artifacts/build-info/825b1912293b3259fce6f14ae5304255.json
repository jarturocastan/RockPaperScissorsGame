{
	"id": "825b1912293b3259fce6f14ae5304255",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"sources": {
			"FeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n//Cryptoloteria Contracts (last updated v1.0)\r\npragma solidity ^0.8.5;\r\nimport \"./ChainLinkOracle.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n/**\r\n * @dev _Available since v1.0\r\n */\r\ncontract FeeManager is Pausable(), Ownable {\r\n    uint256 private SERVICE_FEE = 1;\r\n    uint256 private SERVICE_FEE_CANCEL = 2;\r\n    uint256 private SERVICE_FEE_ACCEPT = 2;\r\n    address payable holder;\r\n    ChainLinkOracle private oracle;\r\n\r\n    event Oracle(\r\n        address indexed oracle\r\n    );\r\n    event Holder(\r\n        address indexed holder\r\n    );\r\n\r\n    event Fee(\r\n        uint256 indexed fee,\r\n        uint256 indexed _cancelFee,\r\n        uint256 indexed _acceptFee\r\n    );\r\n\r\n    /**\r\n    * NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount\r\n    * by default is 2 USD\r\n    * Requirements:\r\n    * @param _acceptFee is the amount in USD\r\n    */\r\n    function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {\r\n        SERVICE_FEE_ACCEPT = _acceptFee;\r\n        emit Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT);\r\n        return true;\r\n    }\r\n    /**\r\n    *NOTE: _cancelFee\r\n    *\r\n    */\r\n    function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {\r\n        SERVICE_FEE_CANCEL = _cancelFee;\r\n        emit Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    *NOTE: _fee\r\n    *\r\n    */\r\n    function setFee(uint256 _fee) public onlyOwner returns(bool) {\r\n        SERVICE_FEE = _fee;\r\n        emit Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT);\r\n        return true;\r\n    }\r\n\r\n    function acceptFee() public view returns(uint256) {\r\n        return (oracle.getUSDPrice() / 100) * SERVICE_FEE_ACCEPT;\r\n    }\r\n\r\n    function cancelFee() public view returns(uint256) {\r\n        return (oracle.getUSDPrice() / 100) * SERVICE_FEE_CANCEL;\r\n    }\r\n\r\n    function fee() public view returns(uint256) {\r\n        return (oracle.getUSDPrice() / 100) * SERVICE_FEE;\r\n    }\r\n\r\n    function setHolder(address payable newHolder) public onlyOwner returns(bool) {\r\n        holder = newHolder;\r\n        emit Holder(holder);\r\n        return true;\r\n    }\r\n\r\n    function setOracle(address newOracle) public onlyOwner returns(bool) {\r\n        oracle = ChainLinkOracle(newOracle);\r\n        emit Oracle(newOracle);\r\n        return true;\r\n    }\r\n\r\n    function retriveFee() internal returns(bool) {\r\n        holder.transfer(msg.value);\r\n        return true;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ChainLinkOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.5;\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract ChainLinkOracle {\r\n    AggregatorV3Interface internal priceFeed;\r\n    address oracleAddressListen;\r\n\r\n    constructor(address _oracleAddressListen)  {\r\n        oracleAddressListen = _oracleAddressListen;\r\n        priceFeed = AggregatorV3Interface(oracleAddressListen);\r\n    }\r\n\r\n    function getLatestPrice() public view returns (int) {\r\n        (,int price,,,) = priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n\r\n    function getUSDPrice() public view returns(uint256) {\r\n        int weth_usd_price = getLatestPrice();\r\n        return uint256(((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price);\r\n    }\r\n\r\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ChainLinkOracle.sol": {
				"ChainLinkOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracleAddressListen",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUSDPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {\r... */\n  mstore(0x40, 0x80)\n    /* \"ChainLinkOracle.sol\":253:422  constructor(address _oracleAddressListen)  {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ChainLinkOracle.sol\":329:349  _oracleAddressListen */\n  dup1\n    /* \"ChainLinkOracle.sol\":307:326  oracleAddressListen */\n  0x01\n  0x00\n    /* \"ChainLinkOracle.sol\":307:349  oracleAddressListen = _oracleAddressListen */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ChainLinkOracle.sol\":394:413  oracleAddressListen */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ChainLinkOracle.sol\":360:369  priceFeed */\n  0x00\n  dup1\n    /* \"ChainLinkOracle.sol\":360:414  priceFeed = AggregatorV3Interface(oracleAddressListen) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ChainLinkOracle.sol\":253:422  constructor(address _oracleAddressListen)  {\r... */\n  pop\n    /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":233:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":639:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":741:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1129   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1129   */\ntag_29:\n    /* \"#utility.yul\":1117:1196   */\n  pop\n  jump\t// out\n    /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ChainLinkOracle.sol\":138:770  contract ChainLinkOracle {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e15f473\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc338287f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChainLinkOracle.sol\":577:765  function getUSDPrice() public view returns(uint256) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {\r... */\n    tag_6:\n        /* \"ChainLinkOracle.sol\":477:480  int */\n      0x00\n        /* \"ChainLinkOracle.sol\":495:504  int price */\n      dup1\n        /* \"ChainLinkOracle.sol\":511:520  priceFeed */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ChainLinkOracle.sol\":511:536  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"ChainLinkOracle.sol\":511:538  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"ChainLinkOracle.sol\":493:538  (,int price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"ChainLinkOracle.sol\":556:561  price */\n      dup1\n        /* \"ChainLinkOracle.sol\":549:561  return price */\n      swap2\n      pop\n      pop\n        /* \"ChainLinkOracle.sol\":430:569  function getLatestPrice() public view returns (int) {\r... */\n      swap1\n      jump\t// out\n        /* \"ChainLinkOracle.sol\":577:765  function getUSDPrice() public view returns(uint256) {\r... */\n    tag_10:\n        /* \"ChainLinkOracle.sol\":620:627  uint256 */\n      0x00\n        /* \"ChainLinkOracle.sol\":640:658  int weth_usd_price */\n      dup1\n        /* \"ChainLinkOracle.sol\":661:677  getLatestPrice() */\n      tag_20\n        /* \"ChainLinkOracle.sol\":661:675  getLatestPrice */\n      tag_6\n        /* \"ChainLinkOracle.sol\":661:677  getLatestPrice() */\n      jump\t// in\n    tag_20:\n        /* \"ChainLinkOracle.sol\":640:677  int weth_usd_price = getLatestPrice() */\n      swap1\n      pop\n        /* \"ChainLinkOracle.sol\":742:756  weth_usd_price */\n      dup1\n        /* \"ChainLinkOracle.sol\":704:738  (1 * (10 ** 8)) * (1 * (10 ** 18)) */\n      0x52b7d2dcc80cd2e4000000\n        /* \"ChainLinkOracle.sol\":703:756  ((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"ChainLinkOracle.sol\":688:757  return uint256(((1 * (10 ** 8)) * (1 * (10 ** 18))) / weth_usd_price) */\n      swap2\n      pop\n      pop\n        /* \"ChainLinkOracle.sol\":577:765  function getUSDPrice() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:148   */\n    tag_24:\n        /* \"#utility.yul\":63:68   */\n      0x00\n        /* \"#utility.yul\":94:100   */\n      dup2\n        /* \"#utility.yul\":88:101   */\n      mload\n        /* \"#utility.yul\":79:101   */\n      swap1\n      pop\n        /* \"#utility.yul\":110:142   */\n      tag_26\n        /* \"#utility.yul\":136:141   */\n      dup2\n        /* \"#utility.yul\":110:142   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":69:148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":154:297   */\n    tag_28:\n        /* \"#utility.yul\":211:216   */\n      0x00\n        /* \"#utility.yul\":242:248   */\n      dup2\n        /* \"#utility.yul\":236:249   */\n      mload\n        /* \"#utility.yul\":227:249   */\n      swap1\n      pop\n        /* \"#utility.yul\":258:291   */\n      tag_30\n        /* \"#utility.yul\":285:290   */\n      dup2\n        /* \"#utility.yul\":258:291   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":217:297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":303:444   */\n    tag_32:\n        /* \"#utility.yul\":359:364   */\n      0x00\n        /* \"#utility.yul\":390:396   */\n      dup2\n        /* \"#utility.yul\":384:397   */\n      mload\n        /* \"#utility.yul\":375:397   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:438   */\n      tag_34\n        /* \"#utility.yul\":432:437   */\n      dup2\n        /* \"#utility.yul\":406:438   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":365:444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":450:1421   */\n    tag_18:\n        /* \"#utility.yul\":553:559   */\n      0x00\n        /* \"#utility.yul\":561:567   */\n      dup1\n        /* \"#utility.yul\":569:575   */\n      0x00\n        /* \"#utility.yul\":577:583   */\n      dup1\n        /* \"#utility.yul\":585:591   */\n      0x00\n        /* \"#utility.yul\":634:637   */\n      0xa0\n        /* \"#utility.yul\":622:631   */\n      dup7\n        /* \"#utility.yul\":613:620   */\n      dup9\n        /* \"#utility.yul\":609:632   */\n      sub\n        /* \"#utility.yul\":605:638   */\n      slt\n        /* \"#utility.yul\":602:604   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":641:720   */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":602:604   */\n    tag_37:\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":786:849   */\n      tag_40\n        /* \"#utility.yul\":841:848   */\n      dup9\n        /* \"#utility.yul\":832:838   */\n      dup3\n        /* \"#utility.yul\":821:830   */\n      dup10\n        /* \"#utility.yul\":817:839   */\n      add\n        /* \"#utility.yul\":786:849   */\n      tag_32\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":776:849   */\n      swap6\n      pop\n        /* \"#utility.yul\":732:859   */\n      pop\n        /* \"#utility.yul\":898:900   */\n      0x20\n        /* \"#utility.yul\":924:987   */\n      tag_41\n        /* \"#utility.yul\":979:986   */\n      dup9\n        /* \"#utility.yul\":970:976   */\n      dup3\n        /* \"#utility.yul\":959:968   */\n      dup10\n        /* \"#utility.yul\":955:977   */\n      add\n        /* \"#utility.yul\":924:987   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":914:987   */\n      swap5\n      pop\n        /* \"#utility.yul\":869:997   */\n      pop\n        /* \"#utility.yul\":1036:1038   */\n      0x40\n        /* \"#utility.yul\":1062:1126   */\n      tag_42\n        /* \"#utility.yul\":1118:1125   */\n      dup9\n        /* \"#utility.yul\":1109:1115   */\n      dup3\n        /* \"#utility.yul\":1098:1107   */\n      dup10\n        /* \"#utility.yul\":1094:1116   */\n      add\n        /* \"#utility.yul\":1062:1126   */\n      tag_28\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1052:1126   */\n      swap4\n      pop\n        /* \"#utility.yul\":1007:1136   */\n      pop\n        /* \"#utility.yul\":1175:1177   */\n      0x60\n        /* \"#utility.yul\":1201:1265   */\n      tag_43\n        /* \"#utility.yul\":1257:1264   */\n      dup9\n        /* \"#utility.yul\":1248:1254   */\n      dup3\n        /* \"#utility.yul\":1237:1246   */\n      dup10\n        /* \"#utility.yul\":1233:1255   */\n      add\n        /* \"#utility.yul\":1201:1265   */\n      tag_28\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1191:1265   */\n      swap3\n      pop\n        /* \"#utility.yul\":1146:1275   */\n      pop\n        /* \"#utility.yul\":1314:1317   */\n      0x80\n        /* \"#utility.yul\":1341:1404   */\n      tag_44\n        /* \"#utility.yul\":1396:1403   */\n      dup9\n        /* \"#utility.yul\":1387:1393   */\n      dup3\n        /* \"#utility.yul\":1376:1385   */\n      dup10\n        /* \"#utility.yul\":1372:1394   */\n      add\n        /* \"#utility.yul\":1341:1404   */\n      tag_32\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1331:1404   */\n      swap2\n      pop\n        /* \"#utility.yul\":1285:1414   */\n      pop\n        /* \"#utility.yul\":592:1421   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1427:1542   */\n    tag_45:\n        /* \"#utility.yul\":1512:1535   */\n      tag_47\n        /* \"#utility.yul\":1529:1534   */\n      dup2\n        /* \"#utility.yul\":1512:1535   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1507:1510   */\n      dup3\n        /* \"#utility.yul\":1500:1536   */\n      mstore\n        /* \"#utility.yul\":1490:1542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1548:1666   */\n    tag_49:\n        /* \"#utility.yul\":1635:1659   */\n      tag_51\n        /* \"#utility.yul\":1653:1658   */\n      dup2\n        /* \"#utility.yul\":1635:1659   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1630:1633   */\n      dup3\n        /* \"#utility.yul\":1623:1660   */\n      mstore\n        /* \"#utility.yul\":1613:1666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1672:1890   */\n    tag_8:\n        /* \"#utility.yul\":1763:1767   */\n      0x00\n        /* \"#utility.yul\":1801:1803   */\n      0x20\n        /* \"#utility.yul\":1790:1799   */\n      dup3\n        /* \"#utility.yul\":1786:1804   */\n      add\n        /* \"#utility.yul\":1778:1804   */\n      swap1\n      pop\n        /* \"#utility.yul\":1814:1883   */\n      tag_54\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1869:1878   */\n      dup4\n        /* \"#utility.yul\":1865:1882   */\n      add\n        /* \"#utility.yul\":1856:1862   */\n      dup5\n        /* \"#utility.yul\":1814:1883   */\n      tag_45\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1768:1890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1896:2118   */\n    tag_12:\n        /* \"#utility.yul\":1989:1993   */\n      0x00\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"#utility.yul\":2016:2025   */\n      dup3\n        /* \"#utility.yul\":2012:2030   */\n      add\n        /* \"#utility.yul\":2004:2030   */\n      swap1\n      pop\n        /* \"#utility.yul\":2040:2111   */\n      tag_56\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2097:2106   */\n      dup4\n        /* \"#utility.yul\":2093:2110   */\n      add\n        /* \"#utility.yul\":2084:2090   */\n      dup5\n        /* \"#utility.yul\":2040:2111   */\n      tag_49\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1994:2118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2590   */\n    tag_22:\n        /* \"#utility.yul\":2244:2245   */\n      0x00\n        /* \"#utility.yul\":2261:2280   */\n      tag_60\n        /* \"#utility.yul\":2278:2279   */\n      dup3\n        /* \"#utility.yul\":2261:2280   */\n      tag_48\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2256:2280   */\n      swap2\n      pop\n        /* \"#utility.yul\":2294:2313   */\n      tag_61\n        /* \"#utility.yul\":2311:2312   */\n      dup4\n        /* \"#utility.yul\":2294:2313   */\n      tag_48\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2289:2313   */\n      swap3\n      pop\n        /* \"#utility.yul\":2332:2333   */\n      dup3\n        /* \"#utility.yul\":2322:2324   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":2337:2355   */\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2322:2324   */\n    tag_62:\n        /* \"#utility.yul\":2523:2524   */\n      0x01\n        /* \"#utility.yul\":2520:2521   */\n      0x00\n        /* \"#utility.yul\":2516:2525   */\n      sub\n        /* \"#utility.yul\":2513:2514   */\n      dup4\n        /* \"#utility.yul\":2510:2526   */\n      eq\n        /* \"#utility.yul\":2429:2495   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2426:2427   */\n      dup4\n        /* \"#utility.yul\":2423:2496   */\n      eq\n        /* \"#utility.yul\":2406:2536   */\n      and\n        /* \"#utility.yul\":2403:2405   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2539:2557   */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2403:2405   */\n    tag_65:\n        /* \"#utility.yul\":2582:2583   */\n      dup3\n        /* \"#utility.yul\":2579:2580   */\n      dup3\n        /* \"#utility.yul\":2574:2584   */\n      sdiv\n        /* \"#utility.yul\":2569:2584   */\n      swap1\n      pop\n        /* \"#utility.yul\":2246:2590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2596:2672   */\n    tag_48:\n        /* \"#utility.yul\":2632:2639   */\n      0x00\n        /* \"#utility.yul\":2661:2666   */\n      dup2\n        /* \"#utility.yul\":2650:2666   */\n      swap1\n      pop\n        /* \"#utility.yul\":2640:2672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2678:2755   */\n    tag_52:\n        /* \"#utility.yul\":2715:2722   */\n      0x00\n        /* \"#utility.yul\":2744:2749   */\n      dup2\n        /* \"#utility.yul\":2733:2749   */\n      swap1\n      pop\n        /* \"#utility.yul\":2723:2755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2761:2866   */\n    tag_70:\n        /* \"#utility.yul\":2797:2804   */\n      0x00\n        /* \"#utility.yul\":2837:2859   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":2830:2835   */\n      dup3\n        /* \"#utility.yul\":2826:2860   */\n      and\n        /* \"#utility.yul\":2815:2860   */\n      swap1\n      pop\n        /* \"#utility.yul\":2805:2866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2872:3052   */\n    tag_67:\n        /* \"#utility.yul\":2920:2997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2917:2918   */\n      0x00\n        /* \"#utility.yul\":2910:2998   */\n      mstore\n        /* \"#utility.yul\":3017:3021   */\n      0x11\n        /* \"#utility.yul\":3014:3015   */\n      0x04\n        /* \"#utility.yul\":3007:3022   */\n      mstore\n        /* \"#utility.yul\":3041:3045   */\n      0x24\n        /* \"#utility.yul\":3038:3039   */\n      0x00\n        /* \"#utility.yul\":3031:3046   */\n      revert\n        /* \"#utility.yul\":3058:3238   */\n    tag_64:\n        /* \"#utility.yul\":3106:3183   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3096:3184   */\n      mstore\n        /* \"#utility.yul\":3203:3207   */\n      0x12\n        /* \"#utility.yul\":3200:3201   */\n      0x04\n        /* \"#utility.yul\":3193:3208   */\n      mstore\n        /* \"#utility.yul\":3227:3231   */\n      0x24\n        /* \"#utility.yul\":3224:3225   */\n      0x00\n        /* \"#utility.yul\":3217:3232   */\n      revert\n        /* \"#utility.yul\":3367:3484   */\n    tag_39:\n        /* \"#utility.yul\":3476:3477   */\n      0x00\n        /* \"#utility.yul\":3473:3474   */\n      dup1\n        /* \"#utility.yul\":3466:3478   */\n      revert\n        /* \"#utility.yul\":3490:3610   */\n    tag_27:\n        /* \"#utility.yul\":3562:3585   */\n      tag_78\n        /* \"#utility.yul\":3579:3584   */\n      dup2\n        /* \"#utility.yul\":3562:3585   */\n      tag_48\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3555:3560   */\n      dup2\n        /* \"#utility.yul\":3552:3586   */\n      eq\n        /* \"#utility.yul\":3542:3544   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":3600:3601   */\n      0x00\n        /* \"#utility.yul\":3597:3598   */\n      dup1\n        /* \"#utility.yul\":3590:3602   */\n      revert\n        /* \"#utility.yul\":3542:3544   */\n    tag_79:\n        /* \"#utility.yul\":3532:3610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:3738   */\n    tag_31:\n        /* \"#utility.yul\":3689:3713   */\n      tag_81\n        /* \"#utility.yul\":3707:3712   */\n      dup2\n        /* \"#utility.yul\":3689:3713   */\n      tag_52\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3682:3687   */\n      dup2\n        /* \"#utility.yul\":3679:3714   */\n      eq\n        /* \"#utility.yul\":3669:3671   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3728:3729   */\n      0x00\n        /* \"#utility.yul\":3725:3726   */\n      dup1\n        /* \"#utility.yul\":3718:3730   */\n      revert\n        /* \"#utility.yul\":3669:3671   */\n    tag_82:\n        /* \"#utility.yul\":3659:3738   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3744:3864   */\n    tag_35:\n        /* \"#utility.yul\":3816:3839   */\n      tag_84\n        /* \"#utility.yul\":3833:3838   */\n      dup2\n        /* \"#utility.yul\":3816:3839   */\n      tag_70\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3809:3814   */\n      dup2\n        /* \"#utility.yul\":3806:3840   */\n      eq\n        /* \"#utility.yul\":3796:3798   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":3854:3855   */\n      0x00\n        /* \"#utility.yul\":3851:3852   */\n      dup1\n        /* \"#utility.yul\":3844:3856   */\n      revert\n        /* \"#utility.yul\":3796:3798   */\n    tag_85:\n        /* \"#utility.yul\":3786:3864   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c6f8f1df2d34fe486db0d37f35c2bd5c4941f6de84de62aa5a1509036205403864736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_288": {
									"entryPoint": null,
									"id": 288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:6"
															},
															"nodeType": "YulIf",
															"src": "243:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:6",
														"type": ""
													}
												],
												"src": "156:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:6",
														"type": ""
													}
												],
												"src": "513:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:6",
														"type": ""
													}
												],
												"src": "594:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:6",
														"type": ""
													}
												],
												"src": "696:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:6"
															},
															"nodeType": "YulIf",
															"src": "1127:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:6",
														"type": ""
													}
												],
												"src": "1074:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610549380380610549833981810160405281019061003291906100f0565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061016b565b6000815190506100ea81610154565b92915050565b6000602082840312156101065761010561014f565b5b6000610114848285016100db565b91505092915050565b60006101288261012f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61015d8161011d565b811461016857600080fd5b50565b6103cf8061017a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b578063c338287f14610059575b600080fd5b610043610077565b6040516100509190610227565b60405180910390f35b610061610125565b60405161006e9190610242565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100e057600080fd5b505afa1580156100f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610118919061018e565b5050509150508091505090565b600080610130610077565b9050806a52b7d2dcc80cd2e4000000610149919061025d565b91505090565b60008151905061015e81610354565b92915050565b6000815190506101738161036b565b92915050565b60008151905061018881610382565b92915050565b600080600080600060a086880312156101aa576101a961034f565b5b60006101b888828901610179565b95505060206101c98882890161014f565b94505060406101da88828901610164565b93505060606101eb88828901610164565b92505060806101fc88828901610179565b9150509295509295909350565b610212816102c7565b82525050565b610221816102d1565b82525050565b600060208201905061023c6000830184610209565b92915050565b60006020820190506102576000830184610218565b92915050565b6000610268826102c7565b9150610273836102c7565b92508261028357610282610320565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156102bc576102bb6102f1565b5b828205905092915050565b6000819050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61035d816102c7565b811461036857600080fd5b50565b610374816102d1565b811461037f57600080fd5b50565b61038b816102db565b811461039657600080fd5b5056fea2646970667358221220c6f8f1df2d34fe486db0d37f35c2bd5c4941f6de84de62aa5a1509036205403864736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x549 CODESIZE SUB DUP1 PUSH2 0x549 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xF0 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEA DUP2 PUSH2 0x154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH2 0x105 PUSH2 0x14F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114 DUP5 DUP3 DUP6 ADD PUSH2 0xDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128 DUP3 PUSH2 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D DUP2 PUSH2 0x11D JUMP JUMPDEST DUP2 EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3CF DUP1 PUSH2 0x17A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC338287F EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x130 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP DUP1 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15E DUP2 PUSH2 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x173 DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x188 DUP2 PUSH2 0x382 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x34F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8 DUP9 DUP3 DUP10 ADD PUSH2 0x179 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C9 DUP9 DUP3 DUP10 ADD PUSH2 0x14F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DA DUP9 DUP3 DUP10 ADD PUSH2 0x164 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1EB DUP9 DUP3 DUP10 ADD PUSH2 0x164 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1FC DUP9 DUP3 DUP10 ADD PUSH2 0x179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x212 DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x221 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268 DUP3 PUSH2 0x2C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x273 DUP4 PUSH2 0x2C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x320 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x2F1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x38B DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP2 EQ PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xF8 CALL 0xDF 0x2D CALLVALUE INVALID 0x48 PUSH14 0xB0D37F35C2BD5C4941F6DE84DE62 0xAA GAS ISZERO MULMOD SUB PUSH3 0x54038 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "138:632:4:-:0;;;253:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;329:20;307:19;;:42;;;;;;;;;;;;;;;;;;394:19;;;;;;;;;;;360:9;;:54;;;;;;;;;;;;;;;;;;253:169;138:632;;7:143:6;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;639:51;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;741:81;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:2;;1186:1;1183;1176:12;1127:2;1117:79;:::o;138:632:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getLatestPrice_302": {
									"entryPoint": 119,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUSDPrice_335": {
									"entryPoint": 293,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3867:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "79:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "136:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "110:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "110:32:6"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "47:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "55:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "63:5:6",
														"type": ""
													}
												],
												"src": "7:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "217:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "227:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "242:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "236:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "227:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "285:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "258:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "258:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "258:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "195:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "203:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "211:5:6",
														"type": ""
													}
												],
												"src": "154:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "390:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "432:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "406:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "406:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "343:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "351:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:6",
														"type": ""
													}
												],
												"src": "303:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "592:829:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "639:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "641:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "641:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "641:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "613:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "634:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:33:6"
															},
															"nodeType": "YulIf",
															"src": "602:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "732:127:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "747:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "761:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "751:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "776:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "821:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "832:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "817:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "817:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "841:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "786:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "786:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "776:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "869:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "884:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "898:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "888:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "914:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "959:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "970:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "955:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "955:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "979:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "924:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "914:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1007:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1022:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1026:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1052:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1098:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1109:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1094:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1094:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1118:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1062:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1052:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1146:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1161:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1175:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1165:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1191:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1237:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1248:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1233:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1233:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1201:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1191:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1285:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1300:17:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1314:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1304:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1331:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1376:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1387:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1372:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1372:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1396:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1341:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1331:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "530:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "541:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "553:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "561:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "569:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "577:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "585:6:6",
														"type": ""
													}
												],
												"src": "450:971:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1490:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1507:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1529:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1512:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1500:36:6"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1478:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1485:3:6",
														"type": ""
													}
												],
												"src": "1427:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1630:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1653:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1635:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1623:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1601:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1608:3:6",
														"type": ""
													}
												],
												"src": "1548:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1778:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1778:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1880:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1814:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1814:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1740:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1752:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1763:4:6",
														"type": ""
													}
												],
												"src": "1672:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2004:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2016:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2012:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2004:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2084:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2108:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2040:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2040:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1966:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1978:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1989:4:6",
														"type": ""
													}
												],
												"src": "1896:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2164:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2174:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2184:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2174:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2157:6:6",
														"type": ""
													}
												],
												"src": "2124:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2246:344:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2256:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2278:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "2261:16:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:19:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2256:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2289:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2311:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "2294:16:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:19:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2289:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2335:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2337:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2337:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2337:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2332:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:9:6"
															},
															"nodeType": "YulIf",
															"src": "2322:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2537:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2539:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2539:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2539:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2426:1:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2429:66:6",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2423:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2423:73:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2513:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2520:1:6",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2523:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:9:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2510:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2510:16:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2406:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:130:6"
															},
															"nodeType": "YulIf",
															"src": "2403:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2569:15:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2579:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2582:1:6"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "2574:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:10:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2569:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2235:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2238:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2244:1:6",
														"type": ""
													}
												],
												"src": "2205:385:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2650:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2661:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2650:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2622:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2632:7:6",
														"type": ""
													}
												],
												"src": "2596:76:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2723:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2733:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2744:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2733:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2705:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2715:7:6",
														"type": ""
													}
												],
												"src": "2678:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2805:61:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2815:45:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2830:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:22:6",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2826:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:34:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2815:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2787:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2797:7:6",
														"type": ""
													}
												],
												"src": "2761:105:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2900:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2920:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2910:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3014:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3007:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3007:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3041:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3031:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3031:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2872:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3086:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3096:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3200:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3203:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3193:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3224:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3058:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3350:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3353:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3343:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3244:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3473:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3466:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3367:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3532:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3588:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3597:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3600:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3590:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3590:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3590:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3555:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3579:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "3562:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3562:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3552:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3552:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:42:6"
															},
															"nodeType": "YulIf",
															"src": "3542:2:6"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3525:5:6",
														"type": ""
													}
												],
												"src": "3490:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3659:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3716:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3725:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3728:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3718:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3718:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3718:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3682:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3707:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3689:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3689:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3679:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:43:6"
															},
															"nodeType": "YulIf",
															"src": "3669:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3652:5:6",
														"type": ""
													}
												],
												"src": "3616:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3786:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3842:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3851:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3854:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3844:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3844:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3844:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3809:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3833:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "3816:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3816:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3806:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3806:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3799:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:42:6"
															},
															"nodeType": "YulIf",
															"src": "3796:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3779:5:6",
														"type": ""
													}
												],
												"src": "3744:120:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b578063c338287f14610059575b600080fd5b610043610077565b6040516100509190610227565b60405180910390f35b610061610125565b60405161006e9190610242565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100e057600080fd5b505afa1580156100f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610118919061018e565b5050509150508091505090565b600080610130610077565b9050806a52b7d2dcc80cd2e4000000610149919061025d565b91505090565b60008151905061015e81610354565b92915050565b6000815190506101738161036b565b92915050565b60008151905061018881610382565b92915050565b600080600080600060a086880312156101aa576101a961034f565b5b60006101b888828901610179565b95505060206101c98882890161014f565b94505060406101da88828901610164565b93505060606101eb88828901610164565b92505060806101fc88828901610179565b9150509295509295909350565b610212816102c7565b82525050565b610221816102d1565b82525050565b600060208201905061023c6000830184610209565b92915050565b60006020820190506102576000830184610218565b92915050565b6000610268826102c7565b9150610273836102c7565b92508261028357610282610320565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156102bc576102bb6102f1565b5b828205905092915050565b6000819050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61035d816102c7565b811461036857600080fd5b50565b610374816102d1565b811461037f57600080fd5b50565b61038b816102db565b811461039657600080fd5b5056fea2646970667358221220c6f8f1df2d34fe486db0d37f35c2bd5c4941f6de84de62aa5a1509036205403864736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC338287F EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x130 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP DUP1 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15E DUP2 PUSH2 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x173 DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x188 DUP2 PUSH2 0x382 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x34F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8 DUP9 DUP3 DUP10 ADD PUSH2 0x179 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C9 DUP9 DUP3 DUP10 ADD PUSH2 0x14F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DA DUP9 DUP3 DUP10 ADD PUSH2 0x164 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1EB DUP9 DUP3 DUP10 ADD PUSH2 0x164 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1FC DUP9 DUP3 DUP10 ADD PUSH2 0x179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x212 DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x221 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268 DUP3 PUSH2 0x2C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x273 DUP4 PUSH2 0x2C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x320 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x2F1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x38B DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP2 EQ PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xF8 CALL 0xDF 0x2D CALLVALUE INVALID 0x48 PUSH14 0xB0D37F35C2BD5C4941F6DE84DE62 0xAA GAS ISZERO MULMOD SUB PUSH3 0x54038 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "138:632:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;577:188;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:139;477:3;495:9;511;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;493:45;;;;;;556:5;549:12;;;430:139;:::o;577:188::-;620:7;640:18;661:16;:14;:16::i;:::-;640:37;;742:14;704:34;703:53;;;;:::i;:::-;688:69;;;577:188;:::o;7:141:6:-;63:5;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;69:79;;;;:::o;154:143::-;211:5;242:6;236:13;227:22;;258:33;285:5;258:33;:::i;:::-;217:80;;;;:::o;303:141::-;359:5;390:6;384:13;375:22;;406:32;432:5;406:32;:::i;:::-;365:79;;;;:::o;450:971::-;553:6;561;569;577;585;634:3;622:9;613:7;609:23;605:33;602:2;;;641:79;;:::i;:::-;602:2;761:1;786:63;841:7;832:6;821:9;817:22;786:63;:::i;:::-;776:73;;732:127;898:2;924:63;979:7;970:6;959:9;955:22;924:63;:::i;:::-;914:73;;869:128;1036:2;1062:64;1118:7;1109:6;1098:9;1094:22;1062:64;:::i;:::-;1052:74;;1007:129;1175:2;1201:64;1257:7;1248:6;1237:9;1233:22;1201:64;:::i;:::-;1191:74;;1146:129;1314:3;1341:63;1396:7;1387:6;1376:9;1372:22;1341:63;:::i;:::-;1331:73;;1285:129;592:829;;;;;;;;:::o;1427:115::-;1512:23;1529:5;1512:23;:::i;:::-;1507:3;1500:36;1490:52;;:::o;1548:118::-;1635:24;1653:5;1635:24;:::i;:::-;1630:3;1623:37;1613:53;;:::o;1672:218::-;1763:4;1801:2;1790:9;1786:18;1778:26;;1814:69;1880:1;1869:9;1865:17;1856:6;1814:69;:::i;:::-;1768:122;;;;:::o;1896:222::-;1989:4;2027:2;2016:9;2012:18;2004:26;;2040:71;2108:1;2097:9;2093:17;2084:6;2040:71;:::i;:::-;1994:124;;;;:::o;2205:385::-;2244:1;2261:19;2278:1;2261:19;:::i;:::-;2256:24;;2294:19;2311:1;2294:19;:::i;:::-;2289:24;;2332:1;2322:2;;2337:18;;:::i;:::-;2322:2;2523:1;2520;2516:9;2513:1;2510:16;2429:66;2426:1;2423:73;2406:130;2403:2;;;2539:18;;:::i;:::-;2403:2;2582:1;2579;2574:10;2569:15;;2246:344;;;;:::o;2596:76::-;2632:7;2661:5;2650:16;;2640:32;;;:::o;2678:77::-;2715:7;2744:5;2733:16;;2723:32;;;:::o;2761:105::-;2797:7;2837:22;2830:5;2826:34;2815:45;;2805:61;;;:::o;2872:180::-;2920:77;2917:1;2910:88;3017:4;3014:1;3007:15;3041:4;3038:1;3031:15;3058:180;3106:77;3103:1;3096:88;3203:4;3200:1;3193:15;3227:4;3224:1;3217:15;3367:117;3476:1;3473;3466:12;3490:120;3562:23;3579:5;3562:23;:::i;:::-;3555:5;3552:34;3542:2;;3600:1;3597;3590:12;3542:2;3532:78;:::o;3616:122::-;3689:24;3707:5;3689:24;:::i;:::-;3682:5;3679:35;3669:2;;3728:1;3725;3718:12;3669:2;3659:79;:::o;3744:120::-;3816:23;3833:5;3816:23;:::i;:::-;3809:5;3806:34;3796:2;;3854:1;3851;3844:12;3796:2;3786:78;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "195000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getLatestPrice()": "infinite",
								"getUSDPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 253,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 329,
									"end": 349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 307,
									"end": 326,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 326,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 349,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 307,
									"end": 349,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 307,
									"end": 349,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 307,
									"end": 349,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 307,
									"end": 349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 394,
									"end": 413,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 394,
									"end": 413,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 394,
									"end": 413,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 394,
									"end": 413,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 394,
									"end": 413,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 360,
									"end": 369,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 369,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 360,
									"end": 414,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 360,
									"end": 414,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 360,
									"end": 414,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 360,
									"end": 414,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 253,
									"end": 422,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 507,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 507,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 507,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 690,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 639,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 690,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 741,
									"end": 822,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 741,
									"end": 822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 741,
									"end": 822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 741,
									"end": 822,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1127,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1129,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1127,
									"end": 1129,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1196,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 138,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 770,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6f8f1df2d34fe486db0d37f35c2bd5c4941f6de84de62aa5a1509036205403864736f6c63430008050033",
									".code": [
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "8E15F473"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "C338287F"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 520,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 511,
											"end": 520,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "FEAF968C"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 493,
											"end": 538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 549,
											"end": 561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 549,
											"end": 561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 640,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 742,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 738,
											"name": "PUSH",
											"source": 4,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 703,
											"end": 756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 688,
											"end": 757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 688,
											"end": 757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 688,
											"end": 757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 765,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 148,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 63,
											"end": 68,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 88,
											"end": 101,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 79,
											"end": 101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 79,
											"end": 101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 136,
											"end": 141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 69,
											"end": 148,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 69,
											"end": 148,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 69,
											"end": 148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69,
											"end": 148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69,
											"end": 148,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 154,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 154,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 249,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 258,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 285,
											"end": 290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 258,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 258,
											"end": 291,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 291,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 258,
											"end": 291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 217,
											"end": 297,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 217,
											"end": 297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 217,
											"end": 297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 217,
											"end": 297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 217,
											"end": 297,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 303,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 359,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 384,
											"end": 397,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 375,
											"end": 397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 375,
											"end": 397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 406,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 432,
											"end": 437,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 406,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 406,
											"end": 438,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 438,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 406,
											"end": 438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 444,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 444,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 450,
											"end": 1421,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 450,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 569,
											"end": 575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 585,
											"end": 591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 613,
											"end": 620,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 609,
											"end": 632,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 605,
											"end": 638,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 602,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 641,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 641,
											"end": 720,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 720,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 602,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 848,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 817,
											"end": 839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 786,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 786,
											"end": 849,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 776,
											"end": 849,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 776,
											"end": 849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 979,
											"end": 986,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 955,
											"end": 977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 924,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 924,
											"end": 987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 924,
											"end": 987,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 924,
											"end": 987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 987,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 914,
											"end": 987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 869,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1118,
											"end": 1125,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1062,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1062,
											"end": 1126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1062,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1126,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1257,
											"end": 1264,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1265,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1317,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1341,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1385,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1341,
											"end": 1404,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1404,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1341,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 1421,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1427,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1512,
											"end": 1535,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1512,
											"end": 1535,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1512,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1548,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1548,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1653,
											"end": 1658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1635,
											"end": 1659,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1635,
											"end": 1659,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1635,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1666,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1672,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1672,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1778,
											"end": 1804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1778,
											"end": 1804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1814,
											"end": 1883,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1814,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1890,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1896,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2118,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2118,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2590,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2205,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2524,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2526,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2495,
											"name": "PUSH",
											"source": 6,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2496,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2539,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2539,
											"end": 2557,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2539,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2584,
											"name": "SDIV",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2596,
											"end": 2672,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2596,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2678,
											"end": 2755,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2678,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2761,
											"end": 2866,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2761,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2830,
											"end": 2835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2997,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2917,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3238,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3058,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3183,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3224,
											"end": 3225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3232,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3484,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3367,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3610,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3490,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3579,
											"end": 3584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3562,
											"end": 3585,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3562,
											"end": 3585,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3562,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3586,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3610,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3616,
											"end": 3738,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3616,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3689,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3707,
											"end": 3712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3689,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3689,
											"end": 3713,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3713,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3689,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3687,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3714,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3730,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3738,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3744,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3744,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3833,
											"end": 3838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3816,
											"end": 3839,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3839,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3816,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3840,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3864,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getLatestPrice()": "8e15f473",
							"getUSDPrice()": "c338287f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddressListen\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ChainLinkOracle.sol\":\"ChainLinkOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"ChainLinkOracle.sol\":{\"keccak256\":\"0x9390220093eb3bd7590104e08077c69854035444e67d3b050b2dd433e3c193e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf0cd5e82e1d44e3e213e2de0d2019bda7b9413241615efcc2e01f62011a261\",\"dweb:/ipfs/QmUZVdYF7jw3Qpn3ac2zDD9Xf6GFA9UibxvyZt8EGp6oBW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FeeManager.sol": {
				"FeeManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_cancelFee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_acceptFee",
									"type": "uint256"
								}
							],
							"name": "Fee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "Holder",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "Oracle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_acceptFee",
									"type": "uint256"
								}
							],
							"name": "setAcceptFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_cancelFee",
									"type": "uint256"
								}
							],
							"name": "setCancelFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "newHolder",
									"type": "address"
								}
							],
							"name": "setHolder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOracle",
									"type": "address"
								}
							],
							"name": "setOracle",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v1.0",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAcceptFee(uint256)": {
								"params": {
									"_acceptFee": "is the amount in USD"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"FeeManager.sol\":370:371  1 */\n  0x01\n    /* \"FeeManager.sol\":340:371  uint256 private SERVICE_FEE = 1 */\n  dup1\n  sstore\n    /* \"FeeManager.sol\":415:416  2 */\n  0x02\n    /* \"FeeManager.sol\":378:416  uint256 private SERVICE_FEE_CANCEL = 2 */\n  dup1\n  sstore\n    /* \"FeeManager.sol\":460:461  2 */\n  0x02\n    /* \"FeeManager.sol\":423:461  uint256 private SERVICE_FEE_ACCEPT = 2 */\n  0x03\n  sstore\n    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:988  _paused */\n  dup1\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {\r... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FeeManager.sol\":290:2610  contract FeeManager is Pausable(), Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbff098b4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc2fffd6b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd979f5aa\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x14025dcd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3abecc49\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x69fe0e2d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7adbf973\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {\r... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":1749:1874  function acceptFee() public view returns(uint256) {\r... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":1551:1741  function setFee(uint256 _fee) public onlyOwner returns(bool) {\r... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"FeeManager.sol\":2309:2487  function setOracle(address newOracle) public onlyOwner returns(bool) {\r... */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":1017:1233  function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {\r... */\n    tag_10:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":1286:1502  function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {\r... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":2135:2301  function setHolder(address payable newHolder) public onlyOwner returns(bool) {\r... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeManager.sol\":2015:2127  function fee() public view returns(uint256) {\r... */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {\r... */\n    tag_17:\n        /* \"FeeManager.sol\":1923:1930  uint256 */\n      0x00\n        /* \"FeeManager.sol\":1981:1999  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1974:1977  100 */\n      0x64\n        /* \"FeeManager.sol\":1951:1957  oracle */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeManager.sol\":1951:1969  oracle.getUSDPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc338287f\n        /* \"FeeManager.sol\":1951:1971  oracle.getUSDPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"FeeManager.sol\":1951:1977  oracle.getUSDPrice() / 100 */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"FeeManager.sol\":1950:1999  (oracle.getUSDPrice() / 100) * SERVICE_FEE_CANCEL */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"FeeManager.sol\":1943:1999  return (oracle.getUSDPrice() / 100) * SERVICE_FEE_CANCEL */\n      swap1\n      pop\n        /* \"FeeManager.sol\":1882:2007  function cancelFee() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"FeeManager.sol\":1749:1874  function acceptFee() public view returns(uint256) {\r... */\n    tag_21:\n        /* \"FeeManager.sol\":1790:1797  uint256 */\n      0x00\n        /* \"FeeManager.sol\":1848:1866  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1841:1844  100 */\n      0x64\n        /* \"FeeManager.sol\":1818:1824  oracle */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeManager.sol\":1818:1836  oracle.getUSDPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc338287f\n        /* \"FeeManager.sol\":1818:1838  oracle.getUSDPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_76:\n        /* \"FeeManager.sol\":1818:1844  oracle.getUSDPrice() / 100 */\n      tag_77\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_77:\n        /* \"FeeManager.sol\":1817:1866  (oracle.getUSDPrice() / 100) * SERVICE_FEE_ACCEPT */\n      tag_78\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_78:\n        /* \"FeeManager.sol\":1810:1866  return (oracle.getUSDPrice() / 100) * SERVICE_FEE_ACCEPT */\n      swap1\n      pop\n        /* \"FeeManager.sol\":1749:1874  function acceptFee() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1161:1175  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"FeeManager.sol\":1551:1741  function setFee(uint256 _fee) public onlyOwner returns(bool) {\r... */\n    tag_30:\n        /* \"FeeManager.sol\":1606:1610  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"FeeManager.sol\":1637:1641  _fee */\n      dup2\n        /* \"FeeManager.sol\":1623:1634  SERVICE_FEE */\n      0x01\n        /* \"FeeManager.sol\":1623:1641  SERVICE_FEE = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FeeManager.sol\":1692:1710  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1673:1691  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1661:1672  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":1657:1711  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      0x7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f57\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"FeeManager.sol\":1729:1733  true */\n      0x01\n        /* \"FeeManager.sol\":1722:1733  return true */\n      swap1\n      pop\n        /* \"FeeManager.sol\":1551:1741  function setFee(uint256 _fee) public onlyOwner returns(bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_86\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"FeeManager.sol\":2309:2487  function setOracle(address newOracle) public onlyOwner returns(bool) {\r... */\n    tag_37:\n        /* \"FeeManager.sol\":2372:2376  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_86\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"FeeManager.sol\":2414:2423  newOracle */\n      dup2\n        /* \"FeeManager.sol\":2389:2395  oracle */\n      0x05\n      0x00\n        /* \"FeeManager.sol\":2389:2424  oracle = ChainLinkOracle(newOracle) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FeeManager.sol\":2447:2456  newOracle */\n      dup2\n        /* \"FeeManager.sol\":2440:2457  Oracle(newOracle) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6d4881172853e787189216de6d514b739b8ad6a331e19518c66d3dc2b93639b5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FeeManager.sol\":2475:2479  true */\n      0x01\n        /* \"FeeManager.sol\":2468:2479  return true */\n      swap1\n      pop\n        /* \"FeeManager.sol\":2309:2487  function setOracle(address newOracle) public onlyOwner returns(bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"FeeManager.sol\":1017:1233  function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {\r... */\n    tag_45:\n        /* \"FeeManager.sol\":1085:1089  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_86\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"FeeManager.sol\":1123:1133  _acceptFee */\n      dup2\n        /* \"FeeManager.sol\":1102:1120  SERVICE_FEE_ACCEPT */\n      0x03\n        /* \"FeeManager.sol\":1102:1133  SERVICE_FEE_ACCEPT = _acceptFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FeeManager.sol\":1184:1202  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1165:1183  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1153:1164  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":1149:1203  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      0x7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f57\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"FeeManager.sol\":1221:1225  true */\n      0x01\n        /* \"FeeManager.sol\":1214:1225  return true */\n      swap1\n      pop\n        /* \"FeeManager.sol\":1017:1233  function setAcceptFee(uint256 _acceptFee) public onlyOwner  returns(bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":1286:1502  function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {\r... */\n    tag_49:\n        /* \"FeeManager.sol\":1354:1358  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_86\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"FeeManager.sol\":1392:1402  _cancelFee */\n      dup2\n        /* \"FeeManager.sol\":1371:1389  SERVICE_FEE_CANCEL */\n      0x02\n        /* \"FeeManager.sol\":1371:1402  SERVICE_FEE_CANCEL = _cancelFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FeeManager.sol\":1453:1471  SERVICE_FEE_ACCEPT */\n      sload(0x03)\n        /* \"FeeManager.sol\":1434:1452  SERVICE_FEE_CANCEL */\n      sload(0x02)\n        /* \"FeeManager.sol\":1422:1433  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":1418:1472  Fee(SERVICE_FEE,SERVICE_FEE_CANCEL,SERVICE_FEE_ACCEPT) */\n      0x7db2709f6e7adf14b75ac6a4bc01b5f3ff9000017f9648c2b70f6ca8616d8f57\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"FeeManager.sol\":1490:1494  true */\n      0x01\n        /* \"FeeManager.sol\":1483:1494  return true */\n      swap1\n      pop\n        /* \"FeeManager.sol\":1286:1502  function setCancelFee(uint256 _cancelFee) public onlyOwner  returns(bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":2135:2301  function setHolder(address payable newHolder) public onlyOwner returns(bool) {\r... */\n    tag_54:\n        /* \"FeeManager.sol\":2206:2210  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_86\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"FeeManager.sol\":2232:2241  newHolder */\n      dup2\n        /* \"FeeManager.sol\":2223:2229  holder */\n      0x04\n      0x00\n        /* \"FeeManager.sol\":2223:2241  holder = newHolder */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FeeManager.sol\":2264:2270  holder */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeManager.sol\":2257:2271  Holder(holder) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x66743038d969508e26e3d032a34d950971853817a94fd22e88316055e1145bf4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FeeManager.sol\":2289:2293  true */\n      0x01\n        /* \"FeeManager.sol\":2282:2293  return true */\n      swap1\n      pop\n        /* \"FeeManager.sol\":2135:2301  function setHolder(address payable newHolder) public onlyOwner returns(bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"FeeManager.sol\":2015:2127  function fee() public view returns(uint256) {\r... */\n    tag_57:\n        /* \"FeeManager.sol\":2050:2057  uint256 */\n      0x00\n        /* \"FeeManager.sol\":2108:2119  SERVICE_FEE */\n      sload(0x01)\n        /* \"FeeManager.sol\":2101:2104  100 */\n      0x64\n        /* \"FeeManager.sol\":2078:2084  oracle */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeManager.sol\":2078:2096  oracle.getUSDPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc338287f\n        /* \"FeeManager.sol\":2078:2098  oracle.getUSDPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_125:\n        /* \"FeeManager.sol\":2078:2104  oracle.getUSDPrice() / 100 */\n      tag_126\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_126:\n        /* \"FeeManager.sol\":2077:2119  (oracle.getUSDPrice() / 100) * SERVICE_FEE */\n      tag_127\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_127:\n        /* \"FeeManager.sol\":2070:2119  return (oracle.getUSDPrice() / 100) * SERVICE_FEE */\n      swap1\n      pop\n        /* \"FeeManager.sol\":2015:2127  function fee() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_86\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_141:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_143\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_145:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_147\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":212:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:452   */\n    tag_149:\n        /* \"#utility.yul\":359:364   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup2\n        /* \"#utility.yul\":384:404   */\n      calldataload\n        /* \"#utility.yul\":375:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":413:446   */\n      tag_151\n        /* \"#utility.yul\":440:445   */\n      dup2\n        /* \"#utility.yul\":413:446   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":365:452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":458:601   */\n    tag_153:\n        /* \"#utility.yul\":515:520   */\n      0x00\n        /* \"#utility.yul\":546:552   */\n      dup2\n        /* \"#utility.yul\":540:553   */\n      mload\n        /* \"#utility.yul\":531:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":562:595   */\n      tag_155\n        /* \"#utility.yul\":589:594   */\n      dup2\n        /* \"#utility.yul\":562:595   */\n      tag_152\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":521:601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":607:936   */\n    tag_36:\n        /* \"#utility.yul\":666:672   */\n      0x00\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"#utility.yul\":703:712   */\n      dup3\n        /* \"#utility.yul\":694:701   */\n      dup5\n        /* \"#utility.yul\":690:713   */\n      sub\n        /* \"#utility.yul\":686:718   */\n      slt\n        /* \"#utility.yul\":683:685   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":721:800   */\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":683:685   */\n    tag_157:\n        /* \"#utility.yul\":841:842   */\n      0x00\n        /* \"#utility.yul\":866:919   */\n      tag_160\n        /* \"#utility.yul\":911:918   */\n      dup5\n        /* \"#utility.yul\":902:908   */\n      dup3\n        /* \"#utility.yul\":891:900   */\n      dup6\n        /* \"#utility.yul\":887:909   */\n      add\n        /* \"#utility.yul\":866:919   */\n      tag_141\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":856:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":812:929   */\n      pop\n        /* \"#utility.yul\":673:936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":942:1287   */\n    tag_53:\n        /* \"#utility.yul\":1009:1015   */\n      0x00\n        /* \"#utility.yul\":1058:1060   */\n      0x20\n        /* \"#utility.yul\":1046:1055   */\n      dup3\n        /* \"#utility.yul\":1037:1044   */\n      dup5\n        /* \"#utility.yul\":1033:1056   */\n      sub\n        /* \"#utility.yul\":1029:1061   */\n      slt\n        /* \"#utility.yul\":1026:1028   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1064:1143   */\n      tag_163\n      tag_159\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1026:1028   */\n    tag_162:\n        /* \"#utility.yul\":1184:1185   */\n      0x00\n        /* \"#utility.yul\":1209:1270   */\n      tag_164\n        /* \"#utility.yul\":1262:1269   */\n      dup5\n        /* \"#utility.yul\":1253:1259   */\n      dup3\n        /* \"#utility.yul\":1242:1251   */\n      dup6\n        /* \"#utility.yul\":1238:1260   */\n      add\n        /* \"#utility.yul\":1209:1270   */\n      tag_145\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1199:1270   */\n      swap2\n      pop\n        /* \"#utility.yul\":1155:1280   */\n      pop\n        /* \"#utility.yul\":1016:1287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1293:1622   */\n    tag_29:\n        /* \"#utility.yul\":1352:1358   */\n      0x00\n        /* \"#utility.yul\":1401:1403   */\n      0x20\n        /* \"#utility.yul\":1389:1398   */\n      dup3\n        /* \"#utility.yul\":1380:1387   */\n      dup5\n        /* \"#utility.yul\":1376:1399   */\n      sub\n        /* \"#utility.yul\":1372:1404   */\n      slt\n        /* \"#utility.yul\":1369:1371   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1407:1486   */\n      tag_167\n      tag_159\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1369:1371   */\n    tag_166:\n        /* \"#utility.yul\":1527:1528   */\n      0x00\n        /* \"#utility.yul\":1552:1605   */\n      tag_168\n        /* \"#utility.yul\":1597:1604   */\n      dup5\n        /* \"#utility.yul\":1588:1594   */\n      dup3\n        /* \"#utility.yul\":1577:1586   */\n      dup6\n        /* \"#utility.yul\":1573:1595   */\n      add\n        /* \"#utility.yul\":1552:1605   */\n      tag_149\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1542:1605   */\n      swap2\n      pop\n        /* \"#utility.yul\":1498:1615   */\n      pop\n        /* \"#utility.yul\":1359:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1979   */\n    tag_67:\n        /* \"#utility.yul\":1698:1704   */\n      0x00\n        /* \"#utility.yul\":1747:1749   */\n      0x20\n        /* \"#utility.yul\":1735:1744   */\n      dup3\n        /* \"#utility.yul\":1726:1733   */\n      dup5\n        /* \"#utility.yul\":1722:1745   */\n      sub\n        /* \"#utility.yul\":1718:1750   */\n      slt\n        /* \"#utility.yul\":1715:1717   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1753:1832   */\n      tag_171\n      tag_159\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1715:1717   */\n    tag_170:\n        /* \"#utility.yul\":1873:1874   */\n      0x00\n        /* \"#utility.yul\":1898:1962   */\n      tag_172\n        /* \"#utility.yul\":1954:1961   */\n      dup5\n        /* \"#utility.yul\":1945:1951   */\n      dup3\n        /* \"#utility.yul\":1934:1943   */\n      dup6\n        /* \"#utility.yul\":1930:1952   */\n      add\n        /* \"#utility.yul\":1898:1962   */\n      tag_153\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1888:1962   */\n      swap2\n      pop\n        /* \"#utility.yul\":1844:1972   */\n      pop\n        /* \"#utility.yul\":1705:1979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1985:2103   */\n    tag_173:\n        /* \"#utility.yul\":2072:2096   */\n      tag_175\n        /* \"#utility.yul\":2090:2095   */\n      dup2\n        /* \"#utility.yul\":2072:2096   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2067:2070   */\n      dup3\n        /* \"#utility.yul\":2060:2097   */\n      mstore\n        /* \"#utility.yul\":2050:2103   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2109:2218   */\n    tag_177:\n        /* \"#utility.yul\":2190:2211   */\n      tag_179\n        /* \"#utility.yul\":2205:2210   */\n      dup2\n        /* \"#utility.yul\":2190:2211   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2185:2188   */\n      dup3\n        /* \"#utility.yul\":2178:2212   */\n      mstore\n        /* \"#utility.yul\":2168:2218   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2224:2590   */\n    tag_181:\n        /* \"#utility.yul\":2366:2369   */\n      0x00\n        /* \"#utility.yul\":2387:2454   */\n      tag_183\n        /* \"#utility.yul\":2451:2453   */\n      0x26\n        /* \"#utility.yul\":2446:2449   */\n      dup4\n        /* \"#utility.yul\":2387:2454   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2380:2454   */\n      swap2\n      pop\n        /* \"#utility.yul\":2463:2556   */\n      tag_185\n        /* \"#utility.yul\":2552:2555   */\n      dup3\n        /* \"#utility.yul\":2463:2556   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2581:2583   */\n      0x40\n        /* \"#utility.yul\":2576:2579   */\n      dup3\n        /* \"#utility.yul\":2572:2584   */\n      add\n        /* \"#utility.yul\":2565:2584   */\n      swap1\n      pop\n        /* \"#utility.yul\":2370:2590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2596:2962   */\n    tag_187:\n        /* \"#utility.yul\":2738:2741   */\n      0x00\n        /* \"#utility.yul\":2759:2826   */\n      tag_189\n        /* \"#utility.yul\":2823:2825   */\n      0x20\n        /* \"#utility.yul\":2818:2821   */\n      dup4\n        /* \"#utility.yul\":2759:2826   */\n      tag_184\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2752:2826   */\n      swap2\n      pop\n        /* \"#utility.yul\":2835:2928   */\n      tag_190\n        /* \"#utility.yul\":2924:2927   */\n      dup3\n        /* \"#utility.yul\":2835:2928   */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2953:2955   */\n      0x20\n        /* \"#utility.yul\":2948:2951   */\n      dup3\n        /* \"#utility.yul\":2944:2956   */\n      add\n        /* \"#utility.yul\":2937:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2742:2962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3086   */\n    tag_192:\n        /* \"#utility.yul\":3055:3079   */\n      tag_194\n        /* \"#utility.yul\":3073:3078   */\n      dup2\n        /* \"#utility.yul\":3055:3079   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3050:3053   */\n      dup3\n        /* \"#utility.yul\":3043:3080   */\n      mstore\n        /* \"#utility.yul\":3033:3086   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3092:3314   */\n    tag_42:\n        /* \"#utility.yul\":3185:3189   */\n      0x00\n        /* \"#utility.yul\":3223:3225   */\n      0x20\n        /* \"#utility.yul\":3212:3221   */\n      dup3\n        /* \"#utility.yul\":3208:3226   */\n      add\n        /* \"#utility.yul\":3200:3226   */\n      swap1\n      pop\n        /* \"#utility.yul\":3236:3307   */\n      tag_197\n        /* \"#utility.yul\":3304:3305   */\n      0x00\n        /* \"#utility.yul\":3293:3302   */\n      dup4\n        /* \"#utility.yul\":3289:3306   */\n      add\n        /* \"#utility.yul\":3280:3286   */\n      dup5\n        /* \"#utility.yul\":3236:3307   */\n      tag_173\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3190:3314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:3530   */\n    tag_26:\n        /* \"#utility.yul\":3407:3411   */\n      0x00\n        /* \"#utility.yul\":3445:3447   */\n      0x20\n        /* \"#utility.yul\":3434:3443   */\n      dup3\n        /* \"#utility.yul\":3430:3448   */\n      add\n        /* \"#utility.yul\":3422:3448   */\n      swap1\n      pop\n        /* \"#utility.yul\":3458:3523   */\n      tag_199\n        /* \"#utility.yul\":3520:3521   */\n      0x00\n        /* \"#utility.yul\":3509:3518   */\n      dup4\n        /* \"#utility.yul\":3505:3522   */\n      add\n        /* \"#utility.yul\":3496:3502   */\n      dup5\n        /* \"#utility.yul\":3458:3523   */\n      tag_177\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3412:3530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3536:3955   */\n    tag_136:\n        /* \"#utility.yul\":3702:3706   */\n      0x00\n        /* \"#utility.yul\":3740:3742   */\n      0x20\n        /* \"#utility.yul\":3729:3738   */\n      dup3\n        /* \"#utility.yul\":3725:3743   */\n      add\n        /* \"#utility.yul\":3717:3743   */\n      swap1\n      pop\n        /* \"#utility.yul\":3789:3798   */\n      dup2\n        /* \"#utility.yul\":3783:3787   */\n      dup2\n        /* \"#utility.yul\":3779:3799   */\n      sub\n        /* \"#utility.yul\":3775:3776   */\n      0x00\n        /* \"#utility.yul\":3764:3773   */\n      dup4\n        /* \"#utility.yul\":3760:3777   */\n      add\n        /* \"#utility.yul\":3753:3800   */\n      mstore\n        /* \"#utility.yul\":3817:3948   */\n      tag_201\n        /* \"#utility.yul\":3943:3947   */\n      dup2\n        /* \"#utility.yul\":3817:3948   */\n      tag_181\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3809:3948   */\n      swap1\n      pop\n        /* \"#utility.yul\":3707:3955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4380   */\n    tag_86:\n        /* \"#utility.yul\":4127:4131   */\n      0x00\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4154:4163   */\n      dup3\n        /* \"#utility.yul\":4150:4168   */\n      add\n        /* \"#utility.yul\":4142:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":4214:4223   */\n      dup2\n        /* \"#utility.yul\":4208:4212   */\n      dup2\n        /* \"#utility.yul\":4204:4224   */\n      sub\n        /* \"#utility.yul\":4200:4201   */\n      0x00\n        /* \"#utility.yul\":4189:4198   */\n      dup4\n        /* \"#utility.yul\":4185:4202   */\n      add\n        /* \"#utility.yul\":4178:4225   */\n      mstore\n        /* \"#utility.yul\":4242:4373   */\n      tag_203\n        /* \"#utility.yul\":4368:4372   */\n      dup2\n        /* \"#utility.yul\":4242:4373   */\n      tag_187\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4234:4373   */\n      swap1\n      pop\n        /* \"#utility.yul\":4132:4380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4608   */\n    tag_19:\n        /* \"#utility.yul\":4479:4483   */\n      0x00\n        /* \"#utility.yul\":4517:4519   */\n      0x20\n        /* \"#utility.yul\":4506:4515   */\n      dup3\n        /* \"#utility.yul\":4502:4520   */\n      add\n        /* \"#utility.yul\":4494:4520   */\n      swap1\n      pop\n        /* \"#utility.yul\":4530:4601   */\n      tag_205\n        /* \"#utility.yul\":4598:4599   */\n      0x00\n        /* \"#utility.yul\":4587:4596   */\n      dup4\n        /* \"#utility.yul\":4583:4600   */\n      add\n        /* \"#utility.yul\":4574:4580   */\n      dup5\n        /* \"#utility.yul\":4530:4601   */\n      tag_192\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4484:4608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4695:4864   */\n    tag_184:\n        /* \"#utility.yul\":4779:4790   */\n      0x00\n        /* \"#utility.yul\":4813:4819   */\n      dup3\n        /* \"#utility.yul\":4808:4811   */\n      dup3\n        /* \"#utility.yul\":4801:4820   */\n      mstore\n        /* \"#utility.yul\":4853:4857   */\n      0x20\n        /* \"#utility.yul\":4848:4851   */\n      dup3\n        /* \"#utility.yul\":4844:4858   */\n      add\n        /* \"#utility.yul\":4829:4858   */\n      swap1\n      pop\n        /* \"#utility.yul\":4791:4864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5055   */\n    tag_69:\n        /* \"#utility.yul\":4910:4911   */\n      0x00\n        /* \"#utility.yul\":4927:4947   */\n      tag_210\n        /* \"#utility.yul\":4945:4946   */\n      dup3\n        /* \"#utility.yul\":4927:4947   */\n      tag_195\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4922:4947   */\n      swap2\n      pop\n        /* \"#utility.yul\":4961:4981   */\n      tag_211\n        /* \"#utility.yul\":4979:4980   */\n      dup4\n        /* \"#utility.yul\":4961:4981   */\n      tag_195\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4956:4981   */\n      swap3\n      pop\n        /* \"#utility.yul\":5000:5001   */\n      dup3\n        /* \"#utility.yul\":4990:4992   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":5005:5023   */\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4990:4992   */\n    tag_212:\n        /* \"#utility.yul\":5047:5048   */\n      dup3\n        /* \"#utility.yul\":5044:5045   */\n      dup3\n        /* \"#utility.yul\":5040:5049   */\n      div\n        /* \"#utility.yul\":5035:5049   */\n      swap1\n      pop\n        /* \"#utility.yul\":4912:5055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5061:5409   */\n    tag_71:\n        /* \"#utility.yul\":5101:5108   */\n      0x00\n        /* \"#utility.yul\":5124:5144   */\n      tag_216\n        /* \"#utility.yul\":5142:5143   */\n      dup3\n        /* \"#utility.yul\":5124:5144   */\n      tag_195\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5119:5144   */\n      swap2\n      pop\n        /* \"#utility.yul\":5158:5178   */\n      tag_217\n        /* \"#utility.yul\":5176:5177   */\n      dup4\n        /* \"#utility.yul\":5158:5178   */\n      tag_195\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5153:5178   */\n      swap3\n      pop\n        /* \"#utility.yul\":5346:5347   */\n      dup2\n        /* \"#utility.yul\":5278:5344   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5274:5348   */\n      div\n        /* \"#utility.yul\":5271:5272   */\n      dup4\n        /* \"#utility.yul\":5268:5349   */\n      gt\n        /* \"#utility.yul\":5263:5264   */\n      dup3\n        /* \"#utility.yul\":5256:5265   */\n      iszero\n        /* \"#utility.yul\":5249:5266   */\n      iszero\n        /* \"#utility.yul\":5245:5350   */\n      and\n        /* \"#utility.yul\":5242:5244   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":5353:5371   */\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5242:5244   */\n    tag_218:\n        /* \"#utility.yul\":5401:5402   */\n      dup3\n        /* \"#utility.yul\":5398:5399   */\n      dup3\n        /* \"#utility.yul\":5394:5403   */\n      mul\n        /* \"#utility.yul\":5383:5403   */\n      swap1\n      pop\n        /* \"#utility.yul\":5109:5409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5415:5511   */\n    tag_176:\n        /* \"#utility.yul\":5452:5459   */\n      0x00\n        /* \"#utility.yul\":5481:5505   */\n      tag_222\n        /* \"#utility.yul\":5499:5504   */\n      dup3\n        /* \"#utility.yul\":5481:5505   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5470:5505   */\n      swap1\n      pop\n        /* \"#utility.yul\":5460:5511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5517:5621   */\n    tag_224:\n        /* \"#utility.yul\":5562:5569   */\n      0x00\n        /* \"#utility.yul\":5591:5615   */\n      tag_226\n        /* \"#utility.yul\":5609:5614   */\n      dup3\n        /* \"#utility.yul\":5591:5615   */\n      tag_223\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5580:5615   */\n      swap1\n      pop\n        /* \"#utility.yul\":5570:5621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5627:5717   */\n    tag_180:\n        /* \"#utility.yul\":5661:5668   */\n      0x00\n        /* \"#utility.yul\":5704:5709   */\n      dup2\n        /* \"#utility.yul\":5697:5710   */\n      iszero\n        /* \"#utility.yul\":5690:5711   */\n      iszero\n        /* \"#utility.yul\":5679:5711   */\n      swap1\n      pop\n        /* \"#utility.yul\":5669:5717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5723:5849   */\n    tag_223:\n        /* \"#utility.yul\":5760:5767   */\n      0x00\n        /* \"#utility.yul\":5800:5842   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5793:5798   */\n      dup3\n        /* \"#utility.yul\":5789:5843   */\n      and\n        /* \"#utility.yul\":5778:5843   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5855:5932   */\n    tag_195:\n        /* \"#utility.yul\":5892:5899   */\n      0x00\n        /* \"#utility.yul\":5921:5926   */\n      dup2\n        /* \"#utility.yul\":5910:5926   */\n      swap1\n      pop\n        /* \"#utility.yul\":5900:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6118   */\n    tag_220:\n        /* \"#utility.yul\":5986:6063   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5983:5984   */\n      0x00\n        /* \"#utility.yul\":5976:6064   */\n      mstore\n        /* \"#utility.yul\":6083:6087   */\n      0x11\n        /* \"#utility.yul\":6080:6081   */\n      0x04\n        /* \"#utility.yul\":6073:6088   */\n      mstore\n        /* \"#utility.yul\":6107:6111   */\n      0x24\n        /* \"#utility.yul\":6104:6105   */\n      0x00\n        /* \"#utility.yul\":6097:6112   */\n      revert\n        /* \"#utility.yul\":6124:6304   */\n    tag_214:\n        /* \"#utility.yul\":6172:6249   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6250   */\n      mstore\n        /* \"#utility.yul\":6269:6273   */\n      0x12\n        /* \"#utility.yul\":6266:6267   */\n      0x04\n        /* \"#utility.yul\":6259:6274   */\n      mstore\n        /* \"#utility.yul\":6293:6297   */\n      0x24\n        /* \"#utility.yul\":6290:6291   */\n      0x00\n        /* \"#utility.yul\":6283:6298   */\n      revert\n        /* \"#utility.yul\":6433:6550   */\n    tag_159:\n        /* \"#utility.yul\":6542:6543   */\n      0x00\n        /* \"#utility.yul\":6539:6540   */\n      dup1\n        /* \"#utility.yul\":6532:6544   */\n      revert\n        /* \"#utility.yul\":6556:6781   */\n    tag_186:\n        /* \"#utility.yul\":6696:6730   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6692:6693   */\n      0x00\n        /* \"#utility.yul\":6684:6690   */\n      dup3\n        /* \"#utility.yul\":6680:6694   */\n      add\n        /* \"#utility.yul\":6673:6731   */\n      mstore\n        /* \"#utility.yul\":6765:6773   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6760:6762   */\n      0x20\n        /* \"#utility.yul\":6752:6758   */\n      dup3\n        /* \"#utility.yul\":6748:6763   */\n      add\n        /* \"#utility.yul\":6741:6774   */\n      mstore\n        /* \"#utility.yul\":6662:6781   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6787:6969   */\n    tag_191:\n        /* \"#utility.yul\":6927:6961   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6915:6921   */\n      dup3\n        /* \"#utility.yul\":6911:6925   */\n      add\n        /* \"#utility.yul\":6904:6962   */\n      mstore\n        /* \"#utility.yul\":6893:6969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6975:7097   */\n    tag_144:\n        /* \"#utility.yul\":7048:7072   */\n      tag_238\n        /* \"#utility.yul\":7066:7071   */\n      dup2\n        /* \"#utility.yul\":7048:7072   */\n      tag_176\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7041:7046   */\n      dup2\n        /* \"#utility.yul\":7038:7073   */\n      eq\n        /* \"#utility.yul\":7028:7030   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7087:7088   */\n      0x00\n        /* \"#utility.yul\":7084:7085   */\n      dup1\n        /* \"#utility.yul\":7077:7089   */\n      revert\n        /* \"#utility.yul\":7028:7030   */\n    tag_239:\n        /* \"#utility.yul\":7018:7097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7103:7241   */\n    tag_148:\n        /* \"#utility.yul\":7184:7216   */\n      tag_241\n        /* \"#utility.yul\":7210:7215   */\n      dup2\n        /* \"#utility.yul\":7184:7216   */\n      tag_224\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7177:7182   */\n      dup2\n        /* \"#utility.yul\":7174:7217   */\n      eq\n        /* \"#utility.yul\":7164:7166   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7231:7232   */\n      0x00\n        /* \"#utility.yul\":7228:7229   */\n      dup1\n        /* \"#utility.yul\":7221:7233   */\n      revert\n        /* \"#utility.yul\":7164:7166   */\n    tag_242:\n        /* \"#utility.yul\":7154:7241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7247:7369   */\n    tag_152:\n        /* \"#utility.yul\":7320:7344   */\n      tag_244\n        /* \"#utility.yul\":7338:7343   */\n      dup2\n        /* \"#utility.yul\":7320:7344   */\n      tag_195\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7313:7318   */\n      dup2\n        /* \"#utility.yul\":7310:7345   */\n      eq\n        /* \"#utility.yul\":7300:7302   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7359:7360   */\n      0x00\n        /* \"#utility.yul\":7356:7357   */\n      dup1\n        /* \"#utility.yul\":7349:7361   */\n      revert\n        /* \"#utility.yul\":7300:7302   */\n    tag_245:\n        /* \"#utility.yul\":7290:7369   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220539ee428c6c2702e29e1abfd774aa5ce731408c82168ebd79a097d3f0ff7fa4264736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_254": {
									"entryPoint": 89,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 97,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SSTORE PUSH1 0x2 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x54 PUSH2 0x49 PUSH2 0x59 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x61 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x100A DUP1 PUSH2 0x135 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBFF098B4 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xC2FFFD6B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xD979F5AA EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x249 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x14025DCD EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3ABECC49 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x320 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x423 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x470 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E4 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x544 PUSH1 0x0 PUSH2 0xAED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x550 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x56E PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D4881172853E787189216DE6D514B739B8AD6A331E19518C66D3DC2B93639B5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A2 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x765 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80A PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x66743038D969508E26E3D032A34D950971853817A94FD22E88316055E1145BF4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F5 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA13 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD0 SWAP1 PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE2 DUP2 PUSH2 0xAED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xF8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD6 DUP2 PUSH2 0xFA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBEB DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC00 DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2A DUP5 DUP3 DUP6 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC48 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC57 DUP5 DUP3 DUP6 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC75 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP5 DUP3 DUP6 ADD PUSH2 0xBDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB1 DUP5 DUP3 DUP6 ADD PUSH2 0xBF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC3 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCD2 DUP2 PUSH2 0xE7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH1 0x26 DUP4 PUSH2 0xDBE JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP3 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD08 PUSH1 0x20 DUP4 PUSH2 0xDBE JUMP JUMPDEST SWAP2 POP PUSH2 0xD13 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7C DUP2 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9C DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDA DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0xDE5 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDF5 JUMPI PUSH2 0xDF4 PUSH2 0xEE3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0B DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0xE16 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE77 DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF98 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0xFA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFAF DUP2 PUSH2 0xE6C JUMP JUMPDEST DUP2 EQ PUSH2 0xFBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP2 EQ PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP15 0xE4 0x28 0xC6 0xC2 PUSH17 0x2E29E1ABFD774AA5CE731408C82168EBD7 SWAP11 MULMOD PUSH30 0x3F0FF7FA4264736F6C634300080500330000000000000000000000000000 ",
							"sourceMap": "290:2320:5:-:0;;;370:1;340:31;;415:1;378:38;;460:1;423:38;;290:2320;;;;;;;;;;991:5:2;981:7;;:15;;;;;;;;;;;;;;;;;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;290:2320:5;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;290:2320:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_254": {
									"entryPoint": 2789,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 2797,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptFee_460": {
									"entryPoint": 805,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cancelFee_475": {
									"entryPoint": 613,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_490": {
									"entryPoint": 2349,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": 1617,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_186": {
									"entryPoint": 997,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_106": {
									"entryPoint": 1214,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAcceptFee_399": {
									"entryPoint": 1658,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setCancelFee_422": {
									"entryPoint": 1853,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setFee_445": {
									"entryPoint": 1019,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setHolder_510": {
									"entryPoint": 2048,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setOracle_532": {
									"entryPoint": 1350,
									"id": 532,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_129": {
									"entryPoint": 2541,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 3123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7372:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:6"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:155:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "397:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "384:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "440:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "413:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "413:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "343:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "351:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:6",
														"type": ""
													}
												],
												"src": "313:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "531:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "546:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "540:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "531:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "589:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "562:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "515:5:6",
														"type": ""
													}
												],
												"src": "458:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "673:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "719:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "721:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "721:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "721:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "694:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "703:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "690:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "690:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "686:32:6"
															},
															"nodeType": "YulIf",
															"src": "683:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "812:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "827:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "831:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "856:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "891:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "902:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "887:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "887:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "911:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "866:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "866:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "856:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "643:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "654:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "666:6:6",
														"type": ""
													}
												],
												"src": "607:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1016:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1062:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1064:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1064:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1064:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1033:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:32:6"
															},
															"nodeType": "YulIf",
															"src": "1026:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1155:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1170:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1184:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1174:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1199:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1242:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1253:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1238:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1238:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1262:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1209:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1199:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "986:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "997:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1009:6:6",
														"type": ""
													}
												],
												"src": "942:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1359:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1405:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1407:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1407:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1407:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1380:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1389:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1376:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1376:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1372:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:32:6"
															},
															"nodeType": "YulIf",
															"src": "1369:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1498:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1513:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1527:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1517:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1542:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1577:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1588:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1573:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1573:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1597:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1552:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1542:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1329:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1340:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1352:6:6",
														"type": ""
													}
												],
												"src": "1293:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1705:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1753:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1753:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1753:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1726:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1722:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1747:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1718:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:32:6"
															},
															"nodeType": "YulIf",
															"src": "1715:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1844:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1859:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1873:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1863:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1888:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1934:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1945:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1930:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1930:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1954:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1898:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1888:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1675:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1686:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1698:6:6",
														"type": ""
													}
												],
												"src": "1628:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2067:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2090:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2072:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2072:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2060:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2060:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2038:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2045:3:6",
														"type": ""
													}
												],
												"src": "1985:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2185:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2205:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2190:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2178:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2178:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2156:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2163:3:6",
														"type": ""
													}
												],
												"src": "2109:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2380:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2387:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2552:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2463:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2463:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2565:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2576:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2572:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2358:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2366:3:6",
														"type": ""
													}
												],
												"src": "2224:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2742:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2752:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2818:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2823:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2759:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2752:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2835:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2835:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2937:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2948:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2953:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2730:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2738:3:6",
														"type": ""
													}
												],
												"src": "2596:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3033:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3050:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3073:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3055:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3028:3:6",
														"type": ""
													}
												],
												"src": "2968:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3190:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3200:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3212:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3200:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3280:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3293:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3304:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3289:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3289:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3236:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3236:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3162:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3174:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:6",
														"type": ""
													}
												],
												"src": "3092:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3422:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3434:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3430:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3430:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3422:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3496:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3509:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3520:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3505:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3458:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3458:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3384:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3396:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3407:4:6",
														"type": ""
													}
												],
												"src": "3320:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3729:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3740:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3725:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3717:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3783:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3789:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3779:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3779:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3809:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3943:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3817:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3809:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3687:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3702:4:6",
														"type": ""
													}
												],
												"src": "3536:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4132:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4142:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4154:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4150:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4142:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4189:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4200:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4185:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4208:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4214:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4204:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4178:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4178:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4234:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4368:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4242:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4234:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4112:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4127:4:6",
														"type": ""
													}
												],
												"src": "3961:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4484:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4494:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4506:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4494:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4574:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4587:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4598:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4583:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4583:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4530:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4530:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4530:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4456:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4468:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4479:4:6",
														"type": ""
													}
												],
												"src": "4386:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4654:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4664:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4674:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4647:6:6",
														"type": ""
													}
												],
												"src": "4614:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4829:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4848:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4829:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4763:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4768:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4779:11:6",
														"type": ""
													}
												],
												"src": "4695:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4912:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4922:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4945:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4927:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4922:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4956:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4979:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4961:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4961:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4956:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5003:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5005:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5005:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5005:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5000:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:9:6"
															},
															"nodeType": "YulIf",
															"src": "4990:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5035:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5044:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5047:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5040:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5035:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4901:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4904:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4910:1:6",
														"type": ""
													}
												],
												"src": "4870:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5109:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5119:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5142:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5124:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5119:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5153:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5176:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5158:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5153:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5351:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5353:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5353:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5353:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5263:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5256:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5256:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5249:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5249:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5271:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5278:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5346:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5274:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5274:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5268:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5245:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:105:6"
															},
															"nodeType": "YulIf",
															"src": "5242:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5383:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5398:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5401:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5394:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5383:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5092:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5095:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5101:7:6",
														"type": ""
													}
												],
												"src": "5061:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5460:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5470:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5499:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5481:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5470:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5442:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5452:7:6",
														"type": ""
													}
												],
												"src": "5415:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5570:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5580:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5609:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5591:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5580:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5552:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5562:7:6",
														"type": ""
													}
												],
												"src": "5517:104:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5679:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5697:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5697:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5679:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5651:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5661:7:6",
														"type": ""
													}
												],
												"src": "5627:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5768:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5778:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5793:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5800:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5789:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5778:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5750:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5760:7:6",
														"type": ""
													}
												],
												"src": "5723:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5900:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5910:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5921:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5910:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5882:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5892:7:6",
														"type": ""
													}
												],
												"src": "5855:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5966:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5986:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5976:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5976:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5976:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6080:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6083:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6073:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6073:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6104:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6107:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6097:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6097:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6152:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6266:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6269:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6259:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6290:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6293:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6283:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6283:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6283:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6124:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6399:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6416:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6419:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6409:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6409:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6409:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6310:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6522:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6542:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6532:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6532:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6433:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6662:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6684:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6692:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6680:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6680:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6696:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6673:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6673:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6752:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6760:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6748:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6748:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6765:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6654:6:6",
														"type": ""
													}
												],
												"src": "6556:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6893:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6915:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6923:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6911:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6911:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6927:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6904:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6904:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6904:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6885:6:6",
														"type": ""
													}
												],
												"src": "6787:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7075:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7084:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7087:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7077:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7077:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7077:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7041:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7066:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7048:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7048:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7038:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7038:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7031:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:43:6"
															},
															"nodeType": "YulIf",
															"src": "7028:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7011:5:6",
														"type": ""
													}
												],
												"src": "6975:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7154:87:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7219:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7228:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7231:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7221:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7221:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7221:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7177:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7210:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "7184:25:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7184:32:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7174:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7174:43:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7167:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7167:51:6"
															},
															"nodeType": "YulIf",
															"src": "7164:2:6"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7147:5:6",
														"type": ""
													}
												],
												"src": "7103:138:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7290:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7347:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7356:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7359:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7349:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7349:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7349:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7313:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7338:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7320:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7320:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7310:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7303:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:43:6"
															},
															"nodeType": "YulIf",
															"src": "7300:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7283:5:6",
														"type": ""
													}
												],
												"src": "7247:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBFF098B4 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xC2FFFD6B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xD979F5AA EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x249 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x14025DCD EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3ABECC49 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x320 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x423 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x470 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E4 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x544 PUSH1 0x0 PUSH2 0xAED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x550 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x56E PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D4881172853E787189216DE6D514B739B8AD6A331E19518C66D3DC2B93639B5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A2 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x765 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH32 0x7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80A PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x66743038D969508E26E3D032A34D950971853817A94FD22E88316055E1145BF4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC338287F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F5 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA13 PUSH2 0x651 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD0 SWAP1 PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE2 DUP2 PUSH2 0xAED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xF8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD6 DUP2 PUSH2 0xFA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBEB DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC00 DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2A DUP5 DUP3 DUP6 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC48 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC57 DUP5 DUP3 DUP6 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC75 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP5 DUP3 DUP6 ADD PUSH2 0xBDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB1 DUP5 DUP3 DUP6 ADD PUSH2 0xBF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC3 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCD2 DUP2 PUSH2 0xE7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH1 0x26 DUP4 PUSH2 0xDBE JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP3 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD08 PUSH1 0x20 DUP4 PUSH2 0xDBE JUMP JUMPDEST SWAP2 POP PUSH2 0xD13 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7C DUP2 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9C DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDA DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0xDE5 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDF5 JUMPI PUSH2 0xDF4 PUSH2 0xEE3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0B DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0xE16 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE77 DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF98 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0xFA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFAF DUP2 PUSH2 0xE6C JUMP JUMPDEST DUP2 EQ PUSH2 0xFBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP2 EQ PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP15 0xE4 0x28 0xC6 0xC2 PUSH17 0x2E29E1ABFD774AA5CE731408C82168EBD7 SWAP11 MULMOD PUSH30 0x3F0FF7FA4264736F6C634300080500330000000000000000000000000000 ",
							"sourceMap": "290:2320:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:125;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1749;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1098:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1551:190:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;:::i;:::-;;2309:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1017:216:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2135:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2015:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1882:125:5;1923:7;1981:18;;1974:3;1951:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;1950:49;;;;:::i;:::-;1943:56;;1882:125;:::o;1749:::-;1790:7;1848:18;;1841:3;1818:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;1817:49;;;;:::i;:::-;1810:56;;1749:125;:::o;1098:84:2:-;1145:4;1168:7;;;;;;;;;;;1161:14;;1098:84;:::o;1551:190:5:-;1606:4;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1637:4:5::1;1623:11;:18;;;;1692;;1673;;1661:11;;1657:54;;;;;;;;;;1729:4;1722:11;;1551:190:::0;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2309:178:5:-;2372:4;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2414:9:5::1;2389:6;;:35;;;;;;;;;;;;;;;;;;2447:9;2440:17;;;;;;;;;;;;2475:4;2468:11;;2309:178:::0;;;:::o;1036:85:1:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1017:216:5:-;1085:4;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1123:10:5::1;1102:18;:31;;;;1184:18;;1165;;1153:11;;1149:54;;;;;;;;;;1221:4;1214:11;;1017:216:::0;;;:::o;1286:::-;1354:4;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1392:10:5::1;1371:18;:31;;;;1453:18;;1434;;1422:11;;1418:54;;;;;;;;;;1490:4;1483:11;;1286:216:::0;;;:::o;2135:166::-;2206:4;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2232:9:5::1;2223:6;;:18;;;;;;;;;;;;;;;;;;2264:6;;;;;;;;;;;2257:14;;;;;;;;;;;;2289:4;2282:11;;2135:166:::0;;;:::o;2015:112::-;2050:7;2108:11;;2101:3;2078:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;2077:42;;;;:::i;:::-;2070:49;;2015:112;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:139::-;359:5;397:6;384:20;375:29;;413:33;440:5;413:33;:::i;:::-;365:87;;;;:::o;458:143::-;515:5;546:6;540:13;531:22;;562:33;589:5;562:33;:::i;:::-;521:80;;;;:::o;607:329::-;666:6;715:2;703:9;694:7;690:23;686:32;683:2;;;721:79;;:::i;:::-;683:2;841:1;866:53;911:7;902:6;891:9;887:22;866:53;:::i;:::-;856:63;;812:117;673:263;;;;:::o;942:345::-;1009:6;1058:2;1046:9;1037:7;1033:23;1029:32;1026:2;;;1064:79;;:::i;:::-;1026:2;1184:1;1209:61;1262:7;1253:6;1242:9;1238:22;1209:61;:::i;:::-;1199:71;;1155:125;1016:271;;;;:::o;1293:329::-;1352:6;1401:2;1389:9;1380:7;1376:23;1372:32;1369:2;;;1407:79;;:::i;:::-;1369:2;1527:1;1552:53;1597:7;1588:6;1577:9;1573:22;1552:53;:::i;:::-;1542:63;;1498:117;1359:263;;;;:::o;1628:351::-;1698:6;1747:2;1735:9;1726:7;1722:23;1718:32;1715:2;;;1753:79;;:::i;:::-;1715:2;1873:1;1898:64;1954:7;1945:6;1934:9;1930:22;1898:64;:::i;:::-;1888:74;;1844:128;1705:274;;;;:::o;1985:118::-;2072:24;2090:5;2072:24;:::i;:::-;2067:3;2060:37;2050:53;;:::o;2109:109::-;2190:21;2205:5;2190:21;:::i;:::-;2185:3;2178:34;2168:50;;:::o;2224:366::-;2366:3;2387:67;2451:2;2446:3;2387:67;:::i;:::-;2380:74;;2463:93;2552:3;2463:93;:::i;:::-;2581:2;2576:3;2572:12;2565:19;;2370:220;;;:::o;2596:366::-;2738:3;2759:67;2823:2;2818:3;2759:67;:::i;:::-;2752:74;;2835:93;2924:3;2835:93;:::i;:::-;2953:2;2948:3;2944:12;2937:19;;2742:220;;;:::o;2968:118::-;3055:24;3073:5;3055:24;:::i;:::-;3050:3;3043:37;3033:53;;:::o;3092:222::-;3185:4;3223:2;3212:9;3208:18;3200:26;;3236:71;3304:1;3293:9;3289:17;3280:6;3236:71;:::i;:::-;3190:124;;;;:::o;3320:210::-;3407:4;3445:2;3434:9;3430:18;3422:26;;3458:65;3520:1;3509:9;3505:17;3496:6;3458:65;:::i;:::-;3412:118;;;;:::o;3536:419::-;3702:4;3740:2;3729:9;3725:18;3717:26;;3789:9;3783:4;3779:20;3775:1;3764:9;3760:17;3753:47;3817:131;3943:4;3817:131;:::i;:::-;3809:139;;3707:248;;;:::o;3961:419::-;4127:4;4165:2;4154:9;4150:18;4142:26;;4214:9;4208:4;4204:20;4200:1;4189:9;4185:17;4178:47;4242:131;4368:4;4242:131;:::i;:::-;4234:139;;4132:248;;;:::o;4386:222::-;4479:4;4517:2;4506:9;4502:18;4494:26;;4530:71;4598:1;4587:9;4583:17;4574:6;4530:71;:::i;:::-;4484:124;;;;:::o;4695:169::-;4779:11;4813:6;4808:3;4801:19;4853:4;4848:3;4844:14;4829:29;;4791:73;;;;:::o;4870:185::-;4910:1;4927:20;4945:1;4927:20;:::i;:::-;4922:25;;4961:20;4979:1;4961:20;:::i;:::-;4956:25;;5000:1;4990:2;;5005:18;;:::i;:::-;4990:2;5047:1;5044;5040:9;5035:14;;4912:143;;;;:::o;5061:348::-;5101:7;5124:20;5142:1;5124:20;:::i;:::-;5119:25;;5158:20;5176:1;5158:20;:::i;:::-;5153:25;;5346:1;5278:66;5274:74;5271:1;5268:81;5263:1;5256:9;5249:17;5245:105;5242:2;;;5353:18;;:::i;:::-;5242:2;5401:1;5398;5394:9;5383:20;;5109:300;;;;:::o;5415:96::-;5452:7;5481:24;5499:5;5481:24;:::i;:::-;5470:35;;5460:51;;;:::o;5517:104::-;5562:7;5591:24;5609:5;5591:24;:::i;:::-;5580:35;;5570:51;;;:::o;5627:90::-;5661:7;5704:5;5697:13;5690:21;5679:32;;5669:48;;;:::o;5723:126::-;5760:7;5800:42;5793:5;5789:54;5778:65;;5768:81;;;:::o;5855:77::-;5892:7;5921:5;5910:16;;5900:32;;;:::o;5938:180::-;5986:77;5983:1;5976:88;6083:4;6080:1;6073:15;6107:4;6104:1;6097:15;6124:180;6172:77;6169:1;6162:88;6269:4;6266:1;6259:15;6293:4;6290:1;6283:15;6433:117;6542:1;6539;6532:12;6556:225;6696:34;6692:1;6684:6;6680:14;6673:58;6765:8;6760:2;6752:6;6748:15;6741:33;6662:119;:::o;6787:182::-;6927:34;6923:1;6915:6;6911:14;6904:58;6893:76;:::o;6975:122::-;7048:24;7066:5;7048:24;:::i;:::-;7041:5;7038:35;7028:2;;7087:1;7084;7077:12;7028:2;7018:79;:::o;7103:138::-;7184:32;7210:5;7184:32;:::i;:::-;7177:5;7174:43;7164:2;;7231:1;7228;7221:12;7164:2;7154:87;:::o;7247:122::-;7320:24;7338:5;7320:24;:::i;:::-;7313:5;7310:35;7300:2;;7359:1;7356;7349:12;7300:2;7290:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "821200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptFee()": "infinite",
								"cancelFee()": "infinite",
								"fee()": "infinite",
								"owner()": "2572",
								"paused()": "2524",
								"renounceOwnership()": "30613",
								"setAcceptFee(uint256)": "33245",
								"setCancelFee(uint256)": "33267",
								"setFee(uint256)": "33290",
								"setHolder(address)": "30577",
								"setOracle(address)": "28486",
								"transferOwnership(address)": "30983"
							},
							"internal": {
								"retriveFee()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 371,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 340,
									"end": 371,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 415,
									"end": 416,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 378,
									"end": 416,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 378,
									"end": 416,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 461,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 423,
									"end": 461,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 423,
									"end": 461,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 988,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2610,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220539ee428c6c2702e29e1abfd774aa5ce731408c82168ebd79a097d3f0ff7fa4264736f6c63430008050033",
									".code": [
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "BFF098B4"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "C2FFFD6B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "D979F5AA"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "DDCA3F43"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "14025DCD"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "3ABECC49"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "5C975ABB"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "69FE0E2D"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "7ADBF973"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2610,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1999,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1981,
											"end": 1999,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "C338287F"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1950,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2007,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "C338287F"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1818,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1817,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1874,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1661,
											"end": 1672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "PUSH",
											"source": 5,
											"value": "7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57"
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1711,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "6D4881172853E787189216DE6D514B739B8AD6A331E19518C66D3DC2B93639B5"
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1202,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1184,
											"end": 1202,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1164,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1153,
											"end": 1164,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57"
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1203,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1225,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1452,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1434,
											"end": 1452,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "7DB2709F6E7ADF14B75AC6A4BC01B5F3FF9000017F9648C2B70F6CA8616D8F57"
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1483,
											"end": 1494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "66743038D969508E26E3D032A34D950971853817A94FD22E88316055E1145BF4"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2282,
											"end": 2293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2119,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "C338287F"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2078,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2077,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2127,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 307,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 359,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 384,
											"end": 404,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 375,
											"end": 404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 375,
											"end": 404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 452,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 452,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 452,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 458,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 458,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 515,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 531,
											"end": 553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 531,
											"end": 553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 562,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 589,
											"end": 594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 562,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 562,
											"end": 595,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 595,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 562,
											"end": 595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 521,
											"end": 601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 521,
											"end": 601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 601,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 607,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 666,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 694,
											"end": 701,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 690,
											"end": 713,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 686,
											"end": 718,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 683,
											"end": 685,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 683,
											"end": 685,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 721,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 721,
											"end": 800,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 800,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 721,
											"end": 800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 683,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 683,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 841,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 911,
											"end": 918,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 891,
											"end": 900,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 887,
											"end": 909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 812,
											"end": 929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 673,
											"end": 936,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 673,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 673,
											"end": 936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 673,
											"end": 936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 673,
											"end": 936,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1287,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 942,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1064,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1064,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1064,
											"end": 1143,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1064,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1262,
											"end": 1269,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1209,
											"end": 1270,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1270,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1209,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1287,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1287,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1293,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1404,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1552,
											"end": 1605,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1552,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1622,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1628,
											"end": 1979,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1628,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1753,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1753,
											"end": 1832,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 1832,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1753,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 1952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1979,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1979,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1985,
											"end": 2103,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1985,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2103,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2109,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2109,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2218,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2224,
											"end": 2590,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2224,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2387,
											"end": 2454,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2387,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2552,
											"end": 2555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2463,
											"end": 2556,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2463,
											"end": 2556,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2463,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2590,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2596,
											"end": 2962,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2596,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2823,
											"end": 2825,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2759,
											"end": 2826,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2759,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2835,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2835,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2835,
											"end": 2928,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2928,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2835,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 2951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2962,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2968,
											"end": 3086,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2968,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3086,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3092,
											"end": 3314,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3092,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3289,
											"end": 3306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3236,
											"end": 3307,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3307,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3236,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3314,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3320,
											"end": 3530,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3320,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3502,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3458,
											"end": 3523,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3458,
											"end": 3523,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3458,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3536,
											"end": 3955,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3536,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3799,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3943,
											"end": 3947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3817,
											"end": 3948,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3817,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3955,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4380,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3961,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4142,
											"end": 4168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4142,
											"end": 4168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4198,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4242,
											"end": 4373,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4242,
											"end": 4373,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4242,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4386,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4386,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4519,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4598,
											"end": 4599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4596,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4530,
											"end": 4601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4530,
											"end": 4601,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4530,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4608,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4608,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4695,
											"end": 4864,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4695,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4864,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4864,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4870,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4870,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4945,
											"end": 4946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4927,
											"end": 4947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4927,
											"end": 4947,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4927,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4947,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4981,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5055,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5061,
											"end": 5409,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5061,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5119,
											"end": 5144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5119,
											"end": 5144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5158,
											"end": 5178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5158,
											"end": 5178,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5158,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5178,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5278,
											"end": 5344,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5274,
											"end": 5348,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5349,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5266,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5350,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5409,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5409,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5415,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5415,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5499,
											"end": 5504,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5481,
											"end": 5505,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5481,
											"end": 5505,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5481,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5517,
											"end": 5621,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5517,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5562,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5621,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5710,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5717,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5723,
											"end": 5849,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5723,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5760,
											"end": 5767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5842,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5793,
											"end": 5798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5843,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5855,
											"end": 5932,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5855,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5932,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5938,
											"end": 6118,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5938,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6080,
											"end": 6081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6073,
											"end": 6088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6104,
											"end": 6105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6112,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6124,
											"end": 6304,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6124,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6298,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6433,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6544,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6781,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6556,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6730,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6765,
											"end": 6773,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6760,
											"end": 6762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6752,
											"end": 6758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6787,
											"end": 6969,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6787,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6927,
											"end": 6961,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 6962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6969,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6975,
											"end": 7097,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6975,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7066,
											"end": 7071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7048,
											"end": 7072,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7048,
											"end": 7072,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7048,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7073,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7089,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7097,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7103,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7103,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7210,
											"end": 7215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7184,
											"end": 7216,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7184,
											"end": 7216,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7184,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7177,
											"end": 7182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7217,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7233,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7241,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7338,
											"end": 7343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7320,
											"end": 7344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7320,
											"end": 7344,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7320,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7313,
											"end": 7318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7345,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7369,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptFee()": "3abecc49",
							"cancelFee()": "14025dcd",
							"fee()": "ddca3f43",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setAcceptFee(uint256)": "bff098b4",
							"setCancelFee(uint256)": "c2fffd6b",
							"setFee(uint256)": "69fe0e2d",
							"setHolder(address)": "d979f5aa",
							"setOracle(address)": "7adbf973",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_cancelFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_acceptFee\",\"type\":\"uint256\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"Holder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"Oracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_acceptFee\",\"type\":\"uint256\"}],\"name\":\"setAcceptFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cancelFee\",\"type\":\"uint256\"}],\"name\":\"setCancelFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newHolder\",\"type\":\"address\"}],\"name\":\"setHolder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v1.0\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAcceptFee(uint256)\":{\"params\":{\"_acceptFee\":\"is the amount in USD\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setAcceptFee(uint256)\":{\"notice\":\"NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount by default is 2 USD Requirements:\"},\"setCancelFee(uint256)\":{\"notice\":\"NOTE: _cancelFee\"},\"setFee(uint256)\":{\"notice\":\"NOTE: _fee\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FeeManager.sol\":\"FeeManager\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ChainLinkOracle.sol\":{\"keccak256\":\"0x9390220093eb3bd7590104e08077c69854035444e67d3b050b2dd433e3c193e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf0cd5e82e1d44e3e213e2de0d2019bda7b9413241615efcc2e01f62011a261\",\"dweb:/ipfs/QmUZVdYF7jw3Qpn3ac2zDD9Xf6GFA9UibxvyZt8EGp6oBW\"]},\"FeeManager.sol\":{\"keccak256\":\"0x73981159e8f1a53ceb08a077b24c4bb051c68b8a15934447f42c8c78a0becd03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c7b59fb2eec8a924c11209c9ed2fe46b5240e0075815473b33dc5f94627a84d\",\"dweb:/ipfs/QmYARBLvDuSPd9M3hjC56psbo2f628JAcdUkeLcftUtUgP\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setAcceptFee(uint256)": {
								"notice": "NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount by default is 2 USD Requirements:"
							},
							"setCancelFee(uint256)": {
								"notice": "NOTE: _cancelFee"
							},
							"setFee(uint256)": {
								"notice": "NOTE: _fee"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "487:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "500:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "559:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "588:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "610:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "602:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "635:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "627:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "659:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "652:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:0"
									},
									"scope": 45,
									"src": "478:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "694:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "761:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "754:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "783:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "776:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "805:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "797:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "830:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "822:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "854:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "847:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:129:0"
									},
									"scope": 45,
									"src": "685:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:821:0",
							"usedErrors": []
						}
					],
					"src": "32:847:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							264
						],
						"Ownable": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 265,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 50,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "668:7:1"
									},
									"id": 51,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 49,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150,
								264
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 52,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 64,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 63,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 150,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 75,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 150,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 82,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 84,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 90,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 92,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 99,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 96,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 95,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 150,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 115,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 111,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 150,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 135,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"id": 137,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 150,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							264
						],
						"Pausable": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 265,
							"src": "115:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "617:7:2"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242,
								264
							],
							"name": "Pausable",
							"nameLocation": "605:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 161,
									"name": "Paused",
									"nameLocation": "715:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "722:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:2"
									},
									"src": "709:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 166,
									"name": "Unpaused",
									"nameLocation": "826:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "835:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:2"
									},
									"src": "820:32:2"
								},
								{
									"constant": false,
									"id": 168,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "858:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 167,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "971:32:2",
										"statements": [
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "981:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "981:15:2"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:2"
									},
									"scope": 242,
									"src": "957:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1151:31:2",
										"statements": [
											{
												"expression": {
													"id": 183,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "1168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 182,
												"id": 184,
												"nodeType": "Return",
												"src": "1161:14:2"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:2"
									},
									"scope": 242,
									"src": "1098:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1393:66:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 190,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "1412:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:2"
											},
											{
												"id": 196,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:2"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 198,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:2"
									},
									"src": "1368:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1659:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 202,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1677:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:2"
											},
											{
												"id": 207,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:2"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 209,
									"name": "whenPaused",
									"nameLocation": "1646:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"src": "1637:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "1912:66:2",
										"statements": [
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1922:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 220,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1958:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1951:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "EmitStatement",
												"src": "1946:25:2"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 212,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 198,
												"src": "1898:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:2"
									},
									"scope": 242,
									"src": "1863:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2158:69:2",
										"statements": [
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2168:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 236,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "2207:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 235,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2198:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "EmitStatement",
												"src": "2193:27:2"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 228,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 209,
												"src": "2147:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:2"
									},
									"scope": 242,
									"src": "2110:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "587:1642:2",
							"usedErrors": []
						}
					],
					"src": "90:2140:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							264
						]
					},
					"id": 265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 245,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 264,
							"linearizedBaseContracts": [
								264
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 250,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 249,
												"id": 252,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 264,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 264,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 265,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"ChainLinkOracle.sol": {
				"ast": {
					"absolutePath": "ChainLinkOracle.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ChainLinkOracle": [
							336
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 46,
							"src": "58:76:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336
							],
							"name": "ChainLinkOracle",
							"nameLocation": "147:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 270,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "201:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "170:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 269,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 268,
											"name": "AggregatorV3Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "170:21:4"
										},
										"referencedDeclaration": 45,
										"src": "170:21:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 272,
									"mutability": "mutable",
									"name": "oracleAddressListen",
									"nameLocation": "225:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "217:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 271,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "296:126:4",
										"statements": [
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "oracleAddressListen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "307:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_oracleAddressListen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "329:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "307:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "307:42:4"
											},
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 281,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "360:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 283,
																"name": "oracleAddressListen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "394:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 282,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "372:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "372:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "360:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "360:54:4"
											}
										]
									},
									"id": 288,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "_oracleAddressListen",
												"nameLocation": "273:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "265:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:30:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:4"
									},
									"scope": 336,
									"src": "253:169:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "482:87:4",
										"statements": [
											{
												"assignments": [
													null,
													294,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "499:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "495:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 293,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "495:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 298,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 295,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "511:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "511:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "493:45:4"
											},
											{
												"expression": {
													"id": 299,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 294,
													"src": "556:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 292,
												"id": 300,
												"nodeType": "Return",
												"src": "549:12:4"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "439:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:4"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "477:3:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 290,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "477:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:5:4"
									},
									"scope": 336,
									"src": "430:139:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "629:136:4",
										"statements": [
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "weth_usd_price",
														"nameLocation": "644:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "640:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 307,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "640:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "661:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
															"typeString": "function () view returns (int256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "661:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "640:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																			"typeString": "int_const 100000000000000000000000000"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					},
																					"id": 319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "705:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_100000000_by_1",
																									"typeString": "int_const 100000000"
																								},
																								"id": 317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 315,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "710:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 316,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "716:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "710:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100000000_by_1",
																									"typeString": "int_const 100000000"
																								}
																							}
																						],
																						"id": 318,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "709:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000000_by_1",
																							"typeString": "int_const 100000000"
																						}
																					},
																					"src": "705:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				}
																			],
																			"id": 320,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "704:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "723:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"id": 324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 322,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "728:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 323,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "734:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "728:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							}
																						],
																						"id": 325,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "727:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "723:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				}
																			],
																			"id": 327,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "722:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		},
																		"src": "704:34:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																			"typeString": "int_const 100000000000000000000000000"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "703:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 330,
																"name": "weth_usd_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "742:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "703:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "695:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "695:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 333,
												"nodeType": "Return",
												"src": "688:69:4"
											}
										]
									},
									"functionSelector": "c338287f",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUSDPrice",
									"nameLocation": "586:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "620:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:9:4"
									},
									"scope": 336,
									"src": "577:188:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 337,
							"src": "138:632:4",
							"usedErrors": []
						}
					],
					"src": "33:737:4"
				},
				"id": 4
			},
			"FeeManager.sol": {
				"ast": {
					"absolutePath": "FeeManager.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ChainLinkOracle": [
							336
						],
						"Context": [
							264
						],
						"FeeManager": [
							548
						],
						"Ownable": [
							150
						],
						"Pausable": [
							242
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "80:23:5"
						},
						{
							"absolutePath": "ChainLinkOracle.sol",
							"file": "./ChainLinkOracle.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 337,
							"src": "105:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 151,
							"src": "138:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 243,
							"src": "192:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"id": 343,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "313:8:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "313:10:5"
								},
								{
									"baseName": {
										"id": 345,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 150,
										"src": "325:7:5"
									},
									"id": 346,
									"nodeType": "InheritanceSpecifier",
									"src": "325:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "249:39:5",
								"text": " @dev _Available since v1.0"
							},
							"fullyImplemented": true,
							"id": 548,
							"linearizedBaseContracts": [
								548,
								150,
								242,
								264
							],
							"name": "FeeManager",
							"nameLocation": "299:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "SERVICE_FEE",
									"nameLocation": "356:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "340:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "370:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 352,
									"mutability": "mutable",
									"name": "SERVICE_FEE_CANCEL",
									"nameLocation": "394:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "378:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 351,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "415:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "SERVICE_FEE_ACCEPT",
									"nameLocation": "439:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "423:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "423:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "460:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "holder",
									"nameLocation": "484:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "468:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 356,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "468:15:5",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "521:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 548,
									"src": "497:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
										"typeString": "contract ChainLinkOracle"
									},
									"typeName": {
										"id": 359,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 358,
											"name": "ChainLinkOracle",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 336,
											"src": "497:15:5"
										},
										"referencedDeclaration": 336,
										"src": "497:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
											"typeString": "contract ChainLinkOracle"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 364,
									"name": "Oracle",
									"nameLocation": "542:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "575:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "559:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:40:5"
									},
									"src": "536:53:5"
								},
								{
									"anonymous": false,
									"id": 368,
									"name": "Holder",
									"nameLocation": "601:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "634:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "618:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:40:5"
									},
									"src": "595:53:5"
								},
								{
									"anonymous": false,
									"id": 376,
									"name": "Fee",
									"nameLocation": "662:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "692:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "676:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "_cancelFee",
												"nameLocation": "722:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "706:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "_acceptFee",
												"nameLocation": "759:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "743:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:111:5"
									},
									"src": "656:121:5"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "1091:142:5",
										"statements": [
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 386,
														"name": "SERVICE_FEE_ACCEPT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1102:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 387,
														"name": "_acceptFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "1123:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1102:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1102:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "SERVICE_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1153:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 392,
															"name": "SERVICE_FEE_CANCEL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1165:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 393,
															"name": "SERVICE_FEE_ACCEPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1184:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1149:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "EmitStatement",
												"src": "1144:59:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1221:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 385,
												"id": 397,
												"nodeType": "Return",
												"src": "1214:11:5"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "785:226:5",
										"text": " NOTE: _acceptFee is the amount in USD that de user pay to use this function, only de owner can change this amount\n by default is 2 USD\n Requirements:\n @param _acceptFee is the amount in USD"
									},
									"functionSelector": "bff098b4",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 381,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1066:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1066:9:5"
										}
									],
									"name": "setAcceptFee",
									"nameLocation": "1026:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_acceptFee",
												"nameLocation": "1047:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1039:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:20:5"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1085:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1085:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:6:5"
									},
									"scope": 548,
									"src": "1017:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1360:142:5",
										"statements": [
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "SERVICE_FEE_CANCEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1371:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "_cancelFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1392:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1371:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1371:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 414,
															"name": "SERVICE_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1422:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 415,
															"name": "SERVICE_FEE_CANCEL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1434:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 416,
															"name": "SERVICE_FEE_ACCEPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1453:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1418:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "1413:59:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1490:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 408,
												"id": 420,
												"nodeType": "Return",
												"src": "1483:11:5"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1239:41:5",
										"text": "NOTE: _cancelFee"
									},
									"functionSelector": "c2fffd6b",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1335:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1335:9:5"
										}
									],
									"name": "setCancelFee",
									"nameLocation": "1295:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "_cancelFee",
												"nameLocation": "1316:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1308:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:20:5"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1354:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1354:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:6:5"
									},
									"scope": 548,
									"src": "1286:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1612:129:5",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "SERVICE_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1623:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1637:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1623:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1623:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "SERVICE_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1661:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 438,
															"name": "SERVICE_FEE_CANCEL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1673:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 439,
															"name": "SERVICE_FEE_ACCEPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1692:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1657:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "EmitStatement",
												"src": "1652:59:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1729:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 431,
												"id": 443,
												"nodeType": "Return",
												"src": "1722:11:5"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1510:35:5",
										"text": "NOTE: _fee"
									},
									"functionSelector": "69fe0e2d",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 427,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1588:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1588:9:5"
										}
									],
									"name": "setFee",
									"nameLocation": "1560:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "1575:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1567:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:14:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1606:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1606:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:6:5"
									},
									"scope": 548,
									"src": "1551:190:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1799:75:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 450,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "1818:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
																				"typeString": "contract ChainLinkOracle"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getUSDPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 335,
																		"src": "1818:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:20:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1841:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1818:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1817:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 456,
														"name": "SERVICE_FEE_ACCEPT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1848:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1817:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 458,
												"nodeType": "Return",
												"src": "1810:56:5"
											}
										]
									},
									"functionSelector": "3abecc49",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptFee",
									"nameLocation": "1758:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:9:5"
									},
									"scope": 548,
									"src": "1749:125:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1932:75:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 465,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "1951:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
																				"typeString": "contract ChainLinkOracle"
																			}
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getUSDPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 335,
																		"src": "1951:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1951:20:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1974:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1951:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 470,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1950:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 471,
														"name": "SERVICE_FEE_CANCEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1981:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1950:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 473,
												"nodeType": "Return",
												"src": "1943:56:5"
											}
										]
									},
									"functionSelector": "14025dcd",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelFee",
									"nameLocation": "1891:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:2:5"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1923:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:9:5"
									},
									"scope": 548,
									"src": "1882:125:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "2059:68:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 480,
																			"name": "oracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "2078:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
																				"typeString": "contract ChainLinkOracle"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getUSDPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 335,
																		"src": "2078:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2078:20:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2101:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2078:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 485,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2077:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 486,
														"name": "SERVICE_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2108:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2077:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 479,
												"id": 488,
												"nodeType": "Return",
												"src": "2070:49:5"
											}
										]
									},
									"functionSelector": "ddca3f43",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "2024:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:5"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:9:5"
									},
									"scope": 548,
									"src": "2015:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2212:89:5",
										"statements": [
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2223:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 500,
														"name": "newHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "2232:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2223:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2223:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 504,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2264:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 503,
														"name": "Holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2257:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "2252:19:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2289:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 498,
												"id": 508,
												"nodeType": "Return",
												"src": "2282:11:5"
											}
										]
									},
									"functionSelector": "d979f5aa",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 495,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 494,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "2188:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2188:9:5"
										}
									],
									"name": "setHolder",
									"nameLocation": "2144:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "newHolder",
												"nameLocation": "2170:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2154:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2154:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:27:5"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2206:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2206:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:6:5"
									},
									"scope": 548,
									"src": "2135:166:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2378:109:5",
										"statements": [
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2389:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
															"typeString": "contract ChainLinkOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 521,
																"name": "newOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2414:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 520,
															"name": "ChainLinkOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "2398:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ChainLinkOracle_$336_$",
																"typeString": "type(contract ChainLinkOracle)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2398:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
															"typeString": "contract ChainLinkOracle"
														}
													},
													"src": "2389:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ChainLinkOracle_$336",
														"typeString": "contract ChainLinkOracle"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2389:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 526,
															"name": "newOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2447:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 525,
														"name": "Oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2440:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "EmitStatement",
												"src": "2435:22:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2475:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 518,
												"id": 530,
												"nodeType": "Return",
												"src": "2468:11:5"
											}
										]
									},
									"functionSelector": "7adbf973",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 515,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 514,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "2354:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2354:9:5"
										}
									],
									"name": "setOracle",
									"nameLocation": "2318:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "newOracle",
												"nameLocation": "2336:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2328:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2327:19:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2372:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2372:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:6:5"
									},
									"scope": 548,
									"src": "2309:178:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "2540:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2567:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2567:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 537,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2551:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2551:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2551:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 536,
												"id": 545,
												"nodeType": "Return",
												"src": "2588:11:5"
											}
										]
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retriveFee",
									"nameLocation": "2504:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:2:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2534:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2534:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:6:5"
									},
									"scope": 548,
									"src": "2495:112:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 549,
							"src": "290:2320:5",
							"usedErrors": []
						}
					],
					"src": "80:2530:5"
				},
				"id": 5
			}
		}
	}
}